{"version":3,"sources":["../rquery/rquery.js"],"names":[],"mappings":"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","file":"rquery.js","sourcesContent":["\nimport expressLib from 'express';\nimport brucedown from 'brucedown';\nimport marked from 'marked';\nimport crypto from 'crypto';\nimport CSON from 'season';\nimport base32 from 'thirty-two';\nimport speakeasy from 'speakeasy';\nimport otp from 'otplib/lib/totp';\nimport concatStream from 'concat-stream';\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport * as Files from './Files';\nimport * as Express from './Express';\n\nimport {default as renderPage} from './html/Page';\nimport {default as renderHelp} from './html/Help';\nimport * as KeyspaceHelp from './html/KeyspaceHelp';\n\nimport KeyspaceHelpPage from './jsx/KeyspaceHelpPage';\n\nimport styles from './html/styles';\n\nconst unsupportedAuth = ['twitter.com', 'github.com', 'gitlab.com', 'bitbucket.org'];\nconst supportedAuth = ['telegram.org'];\n\nexport default class {\n\n   async testExit() {\n      return false;\n   }\n\n   async init() {\n      this.commandMap = new Map();\n      this.logger.info('init', this.config.redisUrl);\n      if (await this.testExit()) process.exit(1);\n      this.hints = {\n         signup: {\n            message: 'Try @redishub_bot /signup on https://web.telegram.org',\n            url: 'https://web.telegram.org/#/im?p=@redishub_bot'\n         },\n         grantCert: {\n            message: `Try @redishub_bot \"/grantcert EXTRACT\" e.g. via https://web.telegram.org`,\n            url: 'https://web.telegram.org/#/im?p=@redishub_bot'\n         }\n      };\n   }\n\n   async start() {\n      this.redis = redisLib.createClient(this.config.redisUrl);\n      this.expressApp = expressLib();\n      this.expressApp.use((req, res, next) => {\n         const scheme = req.get('X-Forwarded-Proto');\n         if (this.config.serviceKey === 'development') {\n            next();\n         } else if (scheme !== 'https') {\n            res.redirect(302, `https://${this.config.hostDomain}${req.url}`);\n         } else {\n            next();\n         }\n      });\n      this.expressApp.use((req, res, next) => {\n         req.pipe(concatStream(content => {\n            req.body = content;\n            next();\n         }));\n      });\n      this.addRoutes();\n      if (this.config.disableTelegramHook) {\n         this.logger.warn('telegram webhook disabled');\n      } else {\n         this.addTelegramWebhook();\n      }\n      this.expressApp.use((req, res) => this.sendErrorRoute(req, res));\n      this.expressServer = await Express.listen(this.expressApp, this.config.port);\n      this.logger.info('listen', this.config.port, this.config.redisUrl);\n   }\n\n   sendErrorRoute(req, res) {\n      try {\n         if (/^\\/favicon.ico$/.test(req.path)) {\n            res.status(404).send(`Invalid path: ${req.path}\\n`);\n            return;\n         }\n         const [matching, account, keyspace] = req.path.match(/^\\/ak\\/([^\\/]+)\\/([^\\/]+)\\//) || [];\n         this.logger.debug('sendErrorRoute', req.path, account, keyspace, this.isBrowser(req));\n         if (this.isBrowser(req)) {\n            let redirectPath = '/routes';\n            if (account && keyspace) {\n               redirectPath = ['/ak', account, keyspace, 'help'].join('/');\n            }\n            res.redirect(302, redirectPath);\n         } else {\n            res.status(404).send(`Invalid: ${req.path}. Try /routes or /help.\\n`);\n         }\n      } catch (err) {\n         this.logger.warn(err);\n         throw err;\n      }\n   }\n\n   addSecureDomain() {\n   }\n\n   addTelegramWebhook() {\n      if (!this.config.botSecret) {\n         this.logger.error('addTelegramWebhook botSecret');\n      } else {\n         this.expressApp.post('/webhook-telegram/*', async (req, res) => {\n            try {\n               this.logger.debug('webhook auth', req.params[0].substring(0, 4));\n               if (req.params[0] !== this.config.botSecret) {\n                  throw {message: 'Invalid telegram webhook'};\n               }\n               const body = req.body.toString('utf8');\n               this.logger.debug('body', body);\n               if (!/^[\"{\\[]/.test(body)) {\n                  throw {message: 'body not JSON', body};\n               } else {\n                  await this.handleTelegram(req, res, JSON.parse(body));\n                  res.send('');\n               }\n            } catch (err) {\n               this.logger.error(err);\n               res.status(500).send(`Internal error: ${err.message}\\n`);\n            }\n         });\n      }\n   }\n\n   async handleTelegram(req, res, telegram) {\n      const cert = this.getClientCert(req);\n      if (!cert) {\n         //throw {message: 'No client cert'};\n      } else {\n         this.logger.debug('telegram cert', cert.split('\\n')[0]);\n         const dn = this.parseCertDn(req);\n         this.logger.debug('telegram', telegram, dn);\n      }\n      const message = {};\n      let content;\n      if (telegram.message) {\n         message.type = 'message';\n         content = telegram.message;\n         if (!content.text) {\n         } else {\n            message.text = content.text;\n         }\n      } else if (telegram.inline_query) {\n         message.type = 'query';\n         content = telegram.inline_query;\n         if (!content.query) {\n         } else {\n            message.text = content.query;\n         }\n      } else {\n         this.logger.warn('telegram', telegram);\n         return;\n      }\n      if (!content.chat) {\n      } else if (!content.chat.id) {\n      } else {\n         message.chatId = content.chat.id;\n      }\n      this.logger.debug('tcm', {telegram, content, message});\n      if (!content.from) {\n      } else if (!content.from.username) {\n      } else if (!content.from.id) {\n      } else {\n         message.fromId = content.from.id;\n         message.greetName = content.from.username;\n         if (true && content.from.first_name) {\n            message.greetName = content.from.first_name;\n         } else if (content.from.first_name && content.from.last_name) {\n            message.greetName = [content.from.first_name, content.from.last_name].join(' ');\n         }\n         message.username = content.from.username;\n         if (/\\/verify/.test(content.text)) {\n            message.action = 'verify';\n            await this.handleTelegramVerify(message);\n         } else if (/\\/grant/.test(content.text)) {\n            message.action = 'grant';\n            await this.handleTelegramGrant(message);\n         } else if (/\\/signup/.test(content.text)) {\n            message.action = 'signup';\n            await this.handleTelegramSignup(message);\n         } else {\n            await this.sendTelegram(message.chatId, 'html', [\n               `Commands: <code>/signup /verifyme /grantcert</code>`\n            ]);\n         }\n      }\n      this.logger.info('telegram message', message, telegram);\n   }\n\n   async handleTelegramSignup(request) {\n      const now = new Date().getTime();\n      this.logger.info('handleTelegramSignup', request);\n      const userKey = this.adminKey('telegram', 'user', request.username);\n      let [sadd, verified, secret] = await this.redis.multiExecAsync(multi => {\n         multi.sadd(this.adminKey('telegram:verified:users'), request.username);\n         multi.hget(userKey, 'verified');\n         multi.hget(userKey, 'secret');\n      });\n      if (!secret) {\n         secret = this.generateTokenKey();\n      }\n      if (sadd || !verified) {\n         const [hmset] = await this.redis.multiExecAsync(multi => {\n            multi.hsetnx(userKey, 'verified', now);\n            multi.hsetnx(userKey, 'id', request.fromId);\n            multi.hsetnx(userKey, 'secret', secret);\n         });\n         await this.sendTelegram(request.chatId, 'html', [\n            `Thanks, ${request.greetName}.`,\n            `Your identity as is now verified to <b>${this.config.serviceLabel}</b>`,\n            `as <code>telegram.me/${request.username}.</code>`\n         ]);\n      }\n      const account = request.username;\n      const CN = `${account}@redishub.com`;\n      const OU = `admin%${account}@redishub.com`;\n      await this.sendTelegram(request.chatId, 'html', [\n         `Thanks, ${request.greetName}.`,\n         `Your RedisHub account name is <b>${account}</b>, as per your Telegram user.`,\n         `Use the following link to create a client cert:`,\n         `${this.config.openHostname}/cert-script/${account}.`,\n         `Add <code>?archive</code> to the URL to archive if <code>~/.redishub/live</code> exists,`,\n         `because the script will refuse to overwrite an existing cert.`,\n      ]);\n   }\n\n   async handleTelegramVerify(request) {\n      const now = new Date().getTime();\n      this.logger.info('handleTelegramVerify', request);\n      const userKey = this.adminKey('telegram', 'user', request.username);\n      let [sadd, verified, secret] = await this.redis.multiExecAsync(multi => {\n         multi.sadd(this.adminKey('telegram:verified:users'), request.username);\n         multi.hget(userKey, 'verified');\n         multi.hget(userKey, 'secret');\n      });\n      if (!secret) {\n         secret = this.generateTokenKey();\n      }\n      if (sadd || !verified) {\n         const [hmset] = await this.redis.multiExecAsync(multi => {\n            multi.hsetnx(userKey, 'verified', now);\n            multi.hsetnx(userKey, 'id', request.fromId);\n            multi.hsetnx(userKey, 'secret', secret);\n         });\n         await this.sendTelegram(request.chatId, 'html', [\n            `Thanks, ${request.greetName}.`,\n            `Your identity as is now verified to <b>${this.config.serviceLabel}</b>`,\n            `as <code>telegram.me/${request.username}.</code>`\n         ]);\n      } else {\n         const duration = now - parseInt(verified);\n         await this.sendTelegram(request.chatId, 'html', [\n            `Hi ${request.greetName}.`,\n            `Your identity as was already verified`,\n            `${Millis.formatVerboseDuration(duration)} ago`,\n            `as <code>@${request.username}</code>`\n         ]);\n      }\n   }\n\n   async handleTelegramGrant(request) {\n      const now = new Date().getTime();\n      this.logger.info('handleTelegramGrant', request);\n      const match = request.text.match(/\\/grantcert (\\w+)$/);\n      if (!match) {\n         await this.sendTelegram(request.chatId, 'html', [\n            `Sorry, that appears to be invalid. Try <code>/grantcert &lt;DIGEST&gt;</code>,`,\n            `where <code>DIGEST</code> is returned by <code>${this.config.secureHostname}/digest-cert</code>`,\n            `performed with the cert to be enrolled`,\n            ``\n         ]);\n         return;\n      }\n      const cert = match[1];\n      const userKey = this.adminKey('telegram', 'user', request.username);\n      const grantKey = this.adminKey('telegram', 'user', request.username, 'grantcert');\n      this.logger.info('handleTelegramGrant', userKey, grantKey, request, cert);\n      let [ismember, verified, secret, exists] = await this.redis.multiExecAsync(multi => {\n         multi.sismember(this.adminKey('telegram:verified:users'), request.username);\n         multi.hget(userKey, 'verified');\n         multi.hget(userKey, 'secret');\n         multi.exists(grantKey);\n      });\n      let [setex] = await this.redis.multiExecAsync(multi => {\n         this.logger.info('handleTelegramGrant setex', grantKey, cert, this.config.enrollExpire);\n         multi.setex(grantKey, cert, this.config.enrollExpire);\n      });\n      if (setex) {\n         await this.sendTelegramReply(request, 'html', [\n            `You have approved enrollment of the cert <b>${certDigest}</b>.`,\n            `That identity can now enroll via ${this.config.hostUrl}/enroll-cert.`,\n            `This must be done in the next ${Millis.formatVerboseDuration(1000*this.config.enrollExpire)}`,\n            `otherwise you need to repeat this request. See redishub.com/docs/register-cert.md`,\n            ``\n         ]);\n      } else {\n         await this.sendTelegramReply(request, 'html', [\n            `Apologies, the 'setex' command reply was <tt>${setex}</tt>`,\n         ]);\n      }\n   }\n\n   async sendTelegramReply(request, format, ...content) {\n      if (request.chatId && request.greetName) {\n         await this.sendTelegram(request.chatId, format,\n            `Thanks, ${request.greetName}.`,\n            ...content\n         );\n      } else {\n         this.logger.error('sendTelegramReply', request);\n      }\n   }\n\n   async sendTelegramAlert(account, format, ...context) {\n      await this.sendTelegram(account, format, ...context);\n   }\n\n   async sendTelegram(chatId, format, ...content) {\n      this.logger.debug('sendTelegram', chatId, format, content);\n      try {\n         const text = lodash.trim(lodash.flatten(content).join(' '));\n         assert(chatId, 'chatId');\n         let uri = `sendMessage?chat_id=${chatId}`;\n         uri += '&disable_notification=true';\n         if (format === 'markdown') {\n            uri += `&parse_mode=Markdown`;\n         } else if (format === 'html') {\n            uri += `&parse_mode=HTML`;\n         }\n         uri += `&text=${encodeURIComponent(text)}`;\n         const url = [this.config.botUrl, uri].join('/');\n         this.logger.info('sendTelegram url', url, chatId, format, text);\n         await Requests.head({url});\n      } catch (err) {\n         this.logger.error(err);\n      }\n   }\n\n   addRoutes() {\n      this.addPublicCommand({\n         key: 'routes',\n         access: 'debug',\n         aliases: ['/'],\n         resultObjectType: 'KeyedArrays',\n         sendResult: async (req, res, reqx, result) => {\n            if (this.isCliDomain(req)) {\n               return result;\n            } else {\n               res.set('Content-Type', 'text/html');\n               res.send(renderPage(renderHelp({\n                  config: this.config, req, result, homePath: '/'\n               })));\n            }\n         }\n      }, async (req, res, reqx) => {\n         let hostUrl = this.config.hostUrl;\n         if (this.config.hostDomain != 'localhost') {\n            hostUrl = 'https://' + req.hostname;\n         }\n         const routes = Express.getRoutes(this.expressApp)\n         .filter(route => !['/', '/routes', '/webhook-telegram/*', '/help', '/about'].includes(route));\n         const accountOnlyRoutes = routes\n         .filter(route => route.includes(':account') && !route.includes(':keyspace'));\n         return {\n            common: routes\n            .filter(route => route)\n            .filter(route => !route.includes(':'))\n            .filter(route => !['/epoch', '/register-ephemeral'].includes(route))\n            .filter(route => route !== '/enroll-cert' || this.isSecureDomain(req))\n            .filter(route => route !== '/register-cert' || this.isSecureDomain(req))\n            .map(route => `${hostUrl}${route}`)\n            ,\n            misc: routes\n            .filter(route => route.includes(':') && !route.includes('telegram') && !/\\:(account|access)/.test(route))\n            .map(route => `${route}`)\n            ,\n            ephemeral: routes\n            .filter(route => route.includes('-ephemeral') && route !== '/register-ephemeral')\n            .map(route => `${route}`)\n            ,\n            telegram: routes\n            .filter(route => route.includes('telegram'))\n            .map(route => `${route}`)\n            ,\n            account: accountOnlyRoutes.map(route => `${route}`)\n            ,\n            accountKeyspace: routes\n            .filter(route => route.includes(':account') && route.includes(':keyspace/'))\n            .map(route => `${route}`)\n         };\n      });\n      this.addPublicCommand({\n         key: 'about',\n         access: 'redirect',\n      }, async (req, res) => {\n         if (this.config.aboutUrl) {\n            res.redirect(302, this.config.aboutUrl);\n         }\n      });\n      this.expressApp.get('', async (req, res) => {\n         res.redirect(302, '/routes');\n      });\n      this.addPublicRoute('help', async (req, res) => {\n         if (this.isBrowser(req)) {\n            if (this.config.helpUrl) {\n               res.redirect(302, this.config.helpUrl);\n            } else if (false) {\n               let content = await Files.readFile('README.md');\n               if (false) {\n                  brucedown('README.md', (err, htmlResult) => {\n                     this.logger.debug('brucedown', htmlResult);\n                  });\n               } else {\n                  content = renderPage({\n                     config: this.config,\n                     req,\n                     title: this.config.serviceLabel,\n                     content: marked(content.toString())\n                  });\n                  res.set('Content-Type', 'text/html');\n                  res.send(content);\n               }\n            }\n         } else if (this.isCliDomain(req)) {\n            return this.listCommands();\n         } else {\n            return this.listCommands();\n         }\n      });\n      if (this.config.allowInfo) {\n         this.addPublicRoute('info', async (req, res) => {\n            res.set('Content-Type', 'text/plain');\n            res.send(await this.redis.infoAsync());\n         });\n      }\n      this.addPublicRoute('epoch', async () => {\n         const time = await this.redis.timeAsync();\n         return time[0];\n      });\n      this.addPublicRoute('time/seconds', async () => {\n         const time = await this.redis.timeAsync();\n         return time[0];\n      });\n      this.addPublicRoute('time/milliseconds', async () => {\n         const time = await this.redis.timeAsync();\n         return Math.ceil(time[0] * 1000 + time[1]/1000);\n      });\n      this.addPublicRoute('time/nanoseconds', async () => {\n         const time = await this.redis.timeAsync();\n         return Math.ceil(time[0] * 1000 * 1000 + parseInt(time[1]));\n      });\n      this.addPublicRoute('time', () => this.redis.timeAsync());\n      this.addPublicCommand({\n         key: 'genkey-otp',\n         params: ['user', 'host'],\n         format: 'json'\n      }, async (req, res) => {\n         const {user, host} = req.params;\n         this.logger.debug('genkey-otp', user, host);\n         return this.buildQrReply({user, host});\n      });\n      this.addPublicCommand({\n         key: 'genkey-ga',\n         params: ['address', 'issuer'],\n         format: 'json'\n      }, async (req, res) => {\n         const {address, issuer} = req.params;\n         this.logger.debug('genkey-ga', address, issuer);\n         return this.buildQrReply({account: address, issuer});\n      });\n      if (!this.config.secureDomain) {\n         this.logger.warn('insecure mode');\n      } else {\n         this.addPublicCommand({\n            key: 'gentoken',\n            params: ['account']\n         }, async (req, res, reqx) => {\n            const {account} = req.params;\n            const accountKey = this.adminKey('account', account);\n            const [[time], registered, admined, accessed, certs] = await this.redis.multiExecAsync(multi => {\n               multi.time();\n               multi.hget(accountKey, 'registered');\n               multi.hget(accountKey, 'admined');\n               multi.hget(accountKey, 'accessed');\n               multi.smembers(this.adminKey('account', account, 'certs'));\n            });\n            const duration = time - admined;\n            if (duration < this.config.adminLimit) {\n               return `Admin command interval not elapsed: ${this.config.adminLimit}s`;\n            }\n            this.logger.debug('gentoken', accountKey);\n            this.validateCert(req, certs, account);\n            const token = this.generateTokenKey(6);\n            await this.redis.setexAsync([accountKey, token].join(':'), this.config.keyExpire, token);\n            return token;\n         });\n         this.addSecureDomain();\n      }\n      this.addPublicCommand({\n         key: 'verify-user-telegram',\n         params: ['user']\n      }, async (req, res) => {\n         const {user} = req.params;\n         const userKey = this.adminKey('telegram', 'user', user);\n         let [[now], sismember, verified, secret] = await this.redis.multiExecAsync(multi => {\n            multi.time();\n            multi.sismember(this.adminKey('telegram:verified:users'), user);\n            multi.hget(userKey, 'verified');\n            multi.hget(userKey, 'secret');\n         });\n         if (sismember) {\n            if (verified) {\n               const duration = parseInt(now) - parseInt(verified);\n               return `OK: ${user}@telegram.me, verified ${Millis.formatVerboseDuration(duration)} ago`;\n            } else {\n               return `OK: ${user}@telegram.me`;\n            }\n         } else {\n            return `Telegram user not yet verified: ${user}. Please Telegram '@redishub_bot /verifyme' e.g. via https://web.telegram.org`;\n         }\n      });\n      this.addPublicCommand({\n         key: 'cert-script', // TODO hardcoded in bot reply\n         params: ['account'],\n         format: 'cli'\n      }, async (req, res, reqx) => {\n         if (req.query.dir && ['', '.', '..'].includes(req.query.dir)) {\n            throw new ValidationError('Empty or invalid \"dir\"');\n         }\n         const account = req.params.account;\n         const CN = `${account}@redishub.com`;\n         const OU = `admin%${account}@redishub.com`;\n         let result = [\n            ``,\n            `Curl this script and pipe into bash as follows:`,\n            ``,\n            `  curl -s ${this.config.hostUrl}/${reqx.command.key}/${account} | bash`\n         ].map(line => `# ${line}`);\n         result.push('');\n         const dir = req.query.dir || '~/.redishub/live';\n         const archive = req.query.archive || '~/.redishub/archive';\n         if (Values.isDefined(req.query.archive)) {\n            result = result.concat([\n               `mkdir -p ${archive}`,\n               `mv -n ${dir} ${archive}/\\`date +'%Y-%M-%dT%Hh%Mm%Ss%s'\\``,\n            ]);\n         } else if (!lodash.isEmpty(req.query.dir)) {\n         } else {\n            result = result.concat([\n               `mkdir -p ~/.redishub`,\n            ]);\n         }\n         const help = [\n            `To force archiving an existing ${dir}, add '?archive' to the URL:`,\n            `   curl -s ${this.config.hostUrl}/${reqx.command.key}/${account}?archive | bash`,\n            `This will first move ${dir} to ${archive}/TIMESTAMP`,\n            ``,\n            `Use: ${dir}/privcert.pem (curl) and/or privcert.p12 (browser)`,\n            ``,\n            `For example, Create a keyspace called 'tmp10days' as follows:`,\n            `   curl -s -E ~/.redishub/live/privcert.pem ${this.config.hostUrl}/ak/${account}/tmp10days/create-keyspace`,\n            ``,\n            `See help for keyspace 'tmp10days' in your browser as follows:`,\n            `   ${this.config.hostUrl}/ak/${account}/tmp10days/help`,\n            ``,\n            `For CLI convenience, install rhcurl bash script, as per instructions:`,\n            `  curl -s -L https://raw.githubusercontent.com/evanx/redishub/master/docs/install.rhcurl.txt`,\n            ``\n         ];\n         result = result.concat([\n            '(',\n            `  if mkdir ${dir} && cd $_`,\n            `  then`,\n            `    echo '${account}' > account`,\n            `    if openssl req -x509 -nodes -days 365 -newkey rsa:2048 \\\\`,\n            `      -subj '/CN=${CN}/OU=${OU}' \\\\`,\n            `      -keyout privkey.pem -out cert.pem`,\n            `    then`,\n            `      openssl x509 -text -in cert.pem > x509.txt`,\n            `      grep 'CN=' x509.txt`,\n            `      cat privkey.pem cert.pem > privcert.pem`,\n            `      openssl x509 -text -in privcert.pem | grep 'CN='`,\n            `      curl -s -E privcert.pem ${this.config.hostUrl}/create-account-telegram/${account} ||`,\n            `        echo 'Registered account ${account} ERROR $?'`,\n            `      if ! openssl pkcs12 -export -out privcert.p12 -inkey privkey.pem -in cert.pem`,\n            `      then`,\n            `        echo 'ERROR $? ($PWD): Try again as follows:'`,\n            `        echo 'cd ${dir} && [ ! -f privcert.p12 ] &&'`,\n            `        echo '  openssl pkcs12 -export -out privcert.p12 -inkey privkey.pem -in cert.pem &&'`,\n            `        echo '  echo \"Exported $PWD/privcert.p12 OK\"'`,\n            `      else`,\n            `        echo \"Exported $PWD/privcert.p12 OK\"`,\n            `      fi`,\n            `      echo; pwd; ls -l`,\n         ]);\n         result = result.concat(help.map(line => `      echo '${line}'`));\n         result = result.concat([\n            `      curl -s https://raw.githubusercontent.com/evanx/redishub/master/docs/install.rhcurl.txt`,\n            `    fi`,\n            `  fi`,\n            ')',\n         ]);\n         result.push('');\n         return lodash.flatten(result);\n      });\n      this.addRegisterRoutes();\n      this.addAccountRoutes();\n      this.addKeyspaceCommand({\n         key: 'help',\n         access: 'debug',\n         resultObjectType: 'KeyedArrays',\n         sendResult: async (req, res, reqx, result) => {\n            if (!this.isCliDomain(req)) {\n               res.set('Content-Type', 'text/html');\n               res.send(renderPage(KeyspaceHelp.render({\n                  config: this.config, commandMap: this.commandMap,\n                  req, reqx, result\n               })));\n            } else if (false && !this.isMobile(req)) {\n               res.set('Content-Type', 'text/html');\n               res.send(ReactDOMServer.renderToString(<KeyspaceHelpPage reqx={reqx} result={result}/>));\n            } else {\n               return result;\n            }\n         }\n      }, async (req, res, reqx) => {\n         const {account, keyspace} = req.params;\n         let hostUrl = this.config.hostUrl;\n         if (this.config.hostDomain !== 'localhost') {\n            hostUrl = `https://${req.hostname}`;\n         }\n         this.logger.ndebug('help', req.params, this.commands.map(command => command.key).join('/'));\n         const message = `Try sample endpoints below on this keyspace.`;\n         const commandReferenceMessage = `Read the Redis.io docs for the following commands`;\n         const customCommandHeading = `Custom commands`;\n         const description = [`You can set, add and view keys, sets, lists, zsets, hashes etc.` +\n            ` Also edit the URL in the location bar to try other combinations.` +\n            ` You can also try changing the domain to 'replica.redishub.com' to read keys.` +\n            ` <i>(We'll offer a simple client-side command completion tool soon.)</i>`\n         ];\n         const exampleParams = [\n            ['ttls'],\n            ['types'],\n            ['set', 'mykey1/myvalue'],\n            ['get', 'mykey1'],\n            ['sadd', 'myset1/myvalue'],\n            ['smembers', 'myset1'],\n            ['lpush', 'mylist1/myvalue1'],\n            ['lpushx', 'mylist1/myvalue2'],\n            ['rpop', 'mylist1'],\n            ['lrange', 'mylist1/0/10'],\n            ['lrevrange', 'mylist1/0/10'],\n            ['lrange', 'mylist1/-10/-1'],\n            ['hset', 'myhashes1/field1/value1'],\n            ['hsetnx', 'myhashes1/field2/value2'],\n            ['hgetall', 'myhashes1'],\n            ['zadd', 'myzset1/10/member10'],\n            ['zadd', 'myzset1/20/member20'],\n            ['zrange', 'myzset1/0/-1'],\n            ['zrevrange', 'myzset1/0/-1'],\n         ];\n         const customExampleParams = [\n            ['set-json-query', 'myobject1?name=myname&id=12346'],\n            ['get-json', 'myobject1'],\n         ];\n         const exampleUrls = exampleParams.map(params => {\n            const key = params.shift();\n            let url = `${hostUrl}/ak/${account}/${keyspace}/${key}`;\n            if (params) {\n               url += '/' + params;\n            }\n            return url;\n         })\n         return {message, commandReferenceMessage, customCommandHeading, description, exampleUrls,\n            commands: this.commands,\n            keyspaceCommands: this.listCommands('keyspace')\n         };\n      });\n      this.addKeyspaceCommand({\n         key: 'create-keyspace',\n         access: 'admin'\n      }, async (req, res, reqx) => {\n         const {command, time, account, keyspace, accountKey} = reqx;\n         this.logger.debug('command', command.key, this.accountKey(account, 'keyspaces'));\n         const [sadd] = await this.redis.multiExecAsync(multi => {\n            multi.sadd(this.accountKey(account, 'keyspaces'), keyspace);\n         });\n         if (!sadd) {\n            throw {message: 'Already exists'};\n         }\n         this.logger.debug('hsetnx', accountKey, time);\n         const [hsetnx] = await this.redis.multiExecAsync(multi => {\n            multi.hsetnx(accountKey, 'registered', time);\n         });\n         if (!hsetnx) {\n            throw {message: 'Failed to register keyspace', reqx};\n         }\n         await this.sendTelegramAlert(account, 'html', [\n            `Registered new keyspace <code>${keyspace}</code>`,\n         ]);\n         return 'OK';\n      });\n      this.addAccountCommand({\n         key: 'account-keyspaces',\n         params: ['account'],\n         description: 'list account keyspaces',\n         relatedCommands: ['create-keyspace'],\n         dangerousRelatedCommands: ['destoy-keyspace'],\n         renderHtmlEach: (req, res, reqx, keyspace) => {\n            this.logger.debug('renderHtmlEach', keyspace);\n            return `<a href=\"/ak/${account}/${keyspace}\">${keyspace}</a>`;\n         },\n         access: 'admin'\n      }, async (req, res, reqx) => {\n         this.logger.debug('keyspaces', reqx.command.key, reqx.account, this.accountKey(reqx.account, 'keyspaces'));\n         const [keyspaces] = await this.redis.multiExecAsync(multi => {\n            multi.smembers(this.accountKey(reqx.account, 'keyspaces'));\n         });\n         return keyspaces;\n      });\n      this.addKeyspaceCommand({\n         key: 'destroy-keyspace',\n         access: 'admin'\n      }, async (req, res, {account, keyspace, accountKey, keyspaceKey}) => {\n         const [keys] = await this.redis.multiExecAsync(multi => {\n            multi.keys(this.keyspaceKey(account, keyspace, '*'));\n         });\n         const [keyspaces] = await this.redis.multiExecAsync(multi => {\n            multi.smembers(this.accountKey(account, 'keyspaces'));\n         });\n         this.logger.info('destroy-keyspace', keyspace, keys.length, keyspaces);\n         const keyIndex = this.keyIndex(account, keyspace);\n         const multiReply = await this.redis.multiExecAsync(multi => {\n            keys.forEach(key => multi.del(key));\n            multi.del(this.accountKey(account, 'keyspaces'), keyspace);\n            //multi.del(this.accountKey(account, 'certs'));\n            //multi.del(accountKey);\n         });\n         return keys.map(key => key.substring(keyIndex));\n      });\n      this.addKeyspaceCommand({\n         key: 'flush',\n         access: 'admin'\n      }, async (req, res) => {\n         const {account, keyspace} = req.params;\n         const keys = await this.redis.keysAsync(this.keyspaceKey(account, keyspace, '*'));\n         const keyIndex = this.keyIndex(account, keyspace);\n         const multi = this.redis.multi();\n         keys.forEach(key => multi.del(key));\n         const multiReply = await multi.execAsync();\n         return keys.map(key => key.substring(keyIndex));\n      });\n      this.addKeyspaceCommand({\n         key: 'show-keyspace-config',\n         access: 'debug'\n      }, async (req, res, reqx) => {\n         reqx.hints = [\n         ];\n         return await this.redis.hgetallAsync(reqx.accountKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'keys',\n         access: 'debug'\n      }, async (req, res, reqx) => {\n         const {account, keyspace} = reqx;\n         reqx.hints = [\n            {\n               uri: ['ttls'],\n            },\n            {\n               uri: ['types'],\n            },\n         ];\n         const keys = await this.redis.keysAsync(this.keyspaceKey(account, keyspace, '*'));\n         const keyIndex = this.keyIndex(account, keyspace);\n         return keys.map(key => key.substring(keyIndex));\n      });\n      this.addKeyspaceCommand({\n         key: 'types',\n         access: 'debug',\n         description: 'view all key types in this keyspace'\n      }, async (req, res, reqx) => {\n         reqx.hints = [\n            {\n               uri: ['ttls'],\n            },\n         ];\n         const {account, keyspace} = reqx;\n         const keys = await this.redis.keysAsync(this.keyspaceKey(account, keyspace, '*'));\n         this.logger.debug('ttl ak', account, keyspace, keys);\n         const keyIndex = this.keyIndex(account, keyspace);\n         const multi = this.redis.multi();\n         keys.forEach(key => multi.type(key));\n         const results = await multi.execAsync();\n         const result = {};\n         keys.forEach((key, index) => result[key.substring(keyIndex)] = results[index]);\n         return result;\n      });\n      this.addKeyspaceCommand({\n         key: 'ttls',\n         access: 'debug',\n         description: 'view all TTLs in this keyspace',\n\n      }, async (req, res, reqx) => {\n         reqx.hints = [\n            {\n               uri: ['types'],\n            },\n         ];\n         const {account, keyspace} = reqx;\n         const keys = await this.redis.keysAsync(this.keyspaceKey(account, keyspace, '*'));\n         this.logger.debug('ttl ak', account, keyspace, keys);\n         const keyIndex = this.keyIndex(account, keyspace);\n         const multi = this.redis.multi();\n         keys.forEach(key => multi.ttl(key));\n         const results = await multi.execAsync();\n         const result = {};\n         keys.forEach((key, index) => result[key.substring(keyIndex)] = results[index]);\n         return result;\n      });\n      this.addKeyspaceCommand({\n         key: 'ttl',\n         params: ['key'],\n         access: 'debug',\n         description: 'check the key TTL'\n      }, async (req, res, reqx) => {\n         reqx.hints = [\n            {\n               uri: ['type', reqx.key],\n            },\n         ];\n         return await this.redis.ttlAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'type',\n         params: ['key'],\n         access: 'debug',\n         description: 'check the type of a key'\n      }, async (req, res, reqx) => {\n         reqx.hints = [\n            {\n               uri: ['ttl', reqx.key],\n            },\n         ];\n         return await this.redis.typeAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'set-encrypt',\n         params: ['key', 'value'],\n         access: 'set',\n         description: 'set the string value of a key, encrypting using client cert'\n      }, async (req, res, {keyspaceKey}) => {\n         const {key, value} = req.params;\n         let cert = req.get('ssl_client_cert');\n         if (!cert) {\n            throw {message: 'No client cert'};\n         }\n         cert = cert.replace(/\\t/g, '\\n');\n         const encrypted = crypto.publicEncrypt(cert, new Buffer(value)).toString('base64');\n         const reply = await this.redis.setAsync(keyspaceKey, encrypted);\n         return {key, encrypted, reply};\n      });\n      this.addKeyspaceCommand({\n         key: 'set',\n         params: ['key', 'value'],\n         access: 'set',\n         description: 'set the string value of a key',\n         relatedCommands: ['get', 'ttl', 'del'],\n      }, async (req, res, reqx) => {\n         return await this.redis.setAsync(reqx.keyspaceKey, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'set-json-object',\n         description: 'set JSON via URL encoded object',\n         params: ['key', 'value'],\n         access: 'set',\n         relatedCommands: ['get-json'],\n      }, async (req, res, reqx) => {\n         let string = req.params.value;\n         if (/^\\w/.test(req.params.value)) {\n            string = ['{', req.params.value, '}'].join('');\n            string = string.replace(/(\\W)(\\w+):/g, '$1\"$2\":');\n         }\n         return await this.redis.setAsync(reqx.keyspaceKey, string);\n      });\n      this.addKeyspaceCommand({\n         key: 'set-json-query',\n         params: ['key'],\n         access: 'set',\n         description: 'set JSON via URL query',\n         relatedCommands: ['get-json']\n      }, async (req, res, reqx) => {\n         return await this.redis.setAsync(reqx.keyspaceKey, JSON.stringify(req.query));\n      });\n      this.addKeyspaceCommand({\n         key: 'setex',\n         params: ['key', 'seconds', 'value'],\n         access: 'set',\n         description: 'set the value and expiration of a key',\n         relatedCommands: ['get', 'ttl'],\n      }, async (req, res, reqx) => {\n         const {seconds, value} = req.params;\n         return await this.redis.setexAsync(reqx.keyspaceKey, seconds, value);\n      });\n      this.addKeyspaceCommand({\n         key: 'setnx',\n         params: ['key', 'value'],\n         access: 'add',\n         description: 'set the value of a key if it does not exist',\n         relatedCommands: ['set', 'get', 'ttl'],\n      }, async (req, res, {keyspaceKey}) => {\n         return await this.redis.setnxAsync(keyspaceKey, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'get',\n         params: ['key'],\n         description: 'get the value you have set',\n         relatedCommands: ['ttl'],\n      }, async (req, res, reqx) => {\n         return await this.redis.getAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'get-json',\n         params: ['key'],\n         description: 'get the JSON value you have set',\n         relatedCommands: ['ttl'],\n      }, async (req, res, reqx) => {\n         const {key, keyspaceKey} = reqx;\n         const value = await this.redis.getAsync(keyspaceKey);\n         this.logger.info('get-json', typeof value, value);\n         if (value) {\n            if (true) {\n               return JSON.parse(value);\n            } else {\n               res.json(JSON.parse(value));\n            }\n         } else if (false) {\n            this.sendStatusMessage(req, res, 404, 'Not found: ' + key);\n         } else {\n            return JSON.parse(null);\n         }\n      });\n      this.addKeyspaceCommand({\n         key: 'incr',\n         params: ['key'],\n         access: 'add',\n         description: 'increment the integer value of a key',\n         relatedCommands: ['get', 'incrby'],\n      }, async (req, res, {keyspaceKey}) => {\n         return await this.redis.incrAsync(keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'incrby',\n         params: ['key', 'increment'],\n         access: 'add',\n         description: 'increment the integer value of a key by the given amount',\n         relatedCommands: ['get', 'incr'],\n      }, async (req, res, reqx) => {\n         return await this.redis.incrbyAsync(reqx.keyspaceKey, req.params.increment);\n      });\n      this.addKeyspaceCommand({\n         key: 'exists',\n         params: ['key'],\n         description: 'check if a key exists in the keyspace',\n         relatedCommands: ['get'],\n      }, async (req, res, {keyspaceKey}) => {\n         return await this.redis.existsAsync(keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'del',\n         params: ['key'],\n         access: 'set',\n         description: 'delete a key from the keyspace',\n         relatedCommands: ['get', 'ttl'],\n      }, async (req, res, {keyspaceKey}) => {\n         return await this.redis.delAsync(keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'sadd',\n         params: ['key', 'member'],\n         access: 'add',\n         description: 'add a member to the list',\n         relatedCommands: ['sismember', 'scard'],\n      }, async (req, res, reqx) => {\n         return await this.redis.saddAsync(reqx.keyspaceKey, req.params.member);\n      });\n      this.addKeyspaceCommand({\n         key: 'srem',\n         params: ['key', 'member'],\n         access: 'set',\n         description: 'remove an element from the set',\n         relatedCommands: ['sadd'],\n      }, async (req, res, {keyspaceKey}) => {\n         return await this.redis.sremAsync(keyspaceKey, req.params.member);\n      });\n      this.addKeyspaceCommand({\n         key: 'smove',\n         params: ['key', 'dest', 'member'],\n         access: 'set'\n      }, async (req, res, {account, keyspace, keyspaceKey}, multi) => {\n         const {dest, member} = req.params;\n         const destKey = this.keyspaceKey(account, keyspace, dest);\n         let result = await this.redis.smoveAsync(keyspaceKey, destKey, member);\n         multi.expire(destKey, this.getKeyExpire(account));\n         return result;\n      });\n      this.addKeyspaceCommand({\n         key: 'spop',\n         params: ['key'],\n         access: 'set',\n         description: 'remove and return a random member of the set',\n         relatedCommands: ['sadd'],\n      }, async (req, res, reqx) => {\n         return await this.redis.spopAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'smembers',\n         params: ['key'],\n         description: 'get the members of your set',\n         relatedCommands: ['scard'],\n      }, async (req, res, reqx) => {\n         return await this.redis.smembersAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'sismember',\n         params: ['key', 'member'],\n         description: 'check that the value exists in your set',\n         relatedCommands: ['smembers'],\n      }, async (req, res, reqx) => {\n         const reply = await this.redis.sismemberAsync(reqx.keyspaceKey, req.params.member);\n         return reply;\n      });\n      this.addKeyspaceCommand({\n         key: 'scard',\n         params: ['key'],\n         description: 'to get the cardinality of the zset'\n      }, async (req, res, reqx) => {\n         return await this.redis.scardAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'lpush',\n         params: ['key', 'value'],\n         access: 'add',\n         description: 'prepend a value to the list',\n         relatedCommands: ['lpushx', 'llen', 'lrange', 'trim', 'rpop'],\n      }, async (req, res, reqx) => {\n         return await this.redis.lpushAsync(reqx.keyspaceKey, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'lpushx',\n         params: ['key', 'value'],\n         access: 'add',\n         description: 'prepend a value to a list if it exists',\n         relatedCommands: ['lpush', 'llen', 'lrange', 'trim', 'rpop'],\n      }, async (req, res, reqx) => {\n         return await this.redis.lpushxAsync(reqx.keyspaceKey, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'lpush-trim',\n         params: ['key', 'length', 'value'],\n         access: 'set',\n         relatedCommands: ['lpush', 'trim'],\n      }, async (req, res, {keyspaceKey}, multi) => {\n         const {value, length} = req.params;\n         multi.lpush(keyspaceKey, value);\n         multi.trim(keyspaceKey, length);\n      });\n      this.addKeyspaceCommand({\n         key: 'rpush',\n         params: ['key', 'value'],\n         rest: true,\n         access: 'add',\n         description: 'append a value to the list (on the right)',\n         relatedCommands: ['lpush'],\n      }, async (req, res, reqx) => {\n         return await this.redis.rpushAsync(reqx.keyspaceKey, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'lpop',\n         params: ['key'],\n         access: 'set',\n         description: 'get and remove the first element in the list',\n         relatedCommands: ['lpush'],\n      }, async (req, res, reqx) => {\n         return await this.redis.lpopAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'blpop',\n         params: ['key', 'timeout'],\n         access: 'set',\n         description: 'get and remove the first element of the list (blocking)',\n         relatedCommands: ['lpush'],\n      }, async (req, res, reqx) => {\n         const reply = await this.redis.blpopAsync(reqx.keyspaceKey, req.params.timeout);\n         if (!reply) {\n            return null;\n         } else {\n            return reply[1];\n         }\n      });\n      this.addKeyspaceCommand({\n         key: 'rpop',\n         params: ['key'],\n         access: 'set',\n         description: 'get and remove the last element of the list',\n         relatedCommands: ['lpush'],\n      }, async (req, res, reqx) => {\n         return await this.redis.rpopAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'brpop',\n         params: ['key', 'timeout'],\n         access: 'set',\n         description: 'get and remove the last element of the list (blocking)',\n         relatedCommands: ['lpush'],\n      }, async (req, res, reqx) => {\n         const reply = await this.redis.brpopAsync(reqx.keyspaceKey, req.params.timeout);\n         if (!reply) {\n            return null;\n         } else {\n            return reply[1];\n         }\n      });\n      this.addKeyspaceCommand({\n         key: 'brpoplpush',\n         params: ['key', 'dest', 'timeout'],\n         access: 'set',\n         description: 'get and remove the last element of the list and prepend to another',\n         relatedCommands: ['lpush'],\n      }, async (req, res, {account, keyspace, keyspaceKey}, multi) => {\n         const {dest, timeout} = req.params;\n         const destKey = this.keyspaceKey(account, keyspace, dest);\n         const result = await this.redis.brpoplpushAsync(keyspaceKey, destKey, timeout);\n         multi.expire(destKey, this.getKeyExpire(account));\n         return result;\n      });\n      this.addKeyspaceCommand({\n         key: 'llen',\n         params: ['key'],\n         description: 'get the number of elements in a list',\n         relatedCommands: ['lrange']\n      }, async (req, res, reqx) => {\n         return await this.redis.llenAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'lindex',\n         params: ['key', 'index'],\n         exampleKeyParams: {\n            index: 1\n         },\n         description: 'get an element from a list by its index',\n         relatedCommands: ['lset', 'lrange']\n      }, async (req, res, reqx) => {\n         return await this.redis.lindexAsync(reqx.keyspaceKey, req.params.index);\n      });\n      this.addKeyspaceCommand({\n         key: 'lrem',\n         params: ['key', 'count', 'value'],\n         access: 'set',\n         description: 'remove elements from the list',\n      }, async (req, res, reqx) => {\n         return await this.redis.lremAsync(reqx.keyspaceKey, req.params.count, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'lset',\n         params: ['key', 'index', 'value'],\n         access: 'set',\n         description: 'set the value of an element in a list by its index',\n         relatedCommands: ['lindex', 'lrange']\n      }, async (req, res, reqx) => {\n         return await this.redis.lsetAsync(reqx.keyspaceKey, req.params.index, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'ltrim',\n         params: ['key', 'start', 'stop'],\n         access: 'set',\n         description: 'trim the list to the specified range',\n         relatedCommands: ['llen']\n      }, async (req, res, reqx) => {\n         return await this.redis.ltrimAsync(reqx.keyspaceKey, req.params.start, req.params.stop);\n      });\n      this.addKeyspaceCommand({\n         key: 'lrange',\n         params: ['key', 'start', 'stop'],\n         exampleKeyParams: {\n            start: 0,\n            stop: 10,\n         },\n         description: 'get a range of elements of a list (from the left)',\n         relatedCommands: ['lrevrange', 'lindex', 'llen', 'rpop', 'brpoplpush']\n      }, async (req, res, reqx) => {\n         return await this.redis.lrangeAsync(reqx.keyspaceKey, req.params.start, req.params.stop);\n      });\n      this.addKeyspaceCommand({\n         key: 'lrevrange',\n         params: ['key', 'start', 'stop'],\n         exampleKeyParams: {\n            start: 0,\n            stop: 10,\n         },\n         description: 'get some elements of your list in reverse order',\n         relatedCommands: ['lrange', 'llen']\n      }, async (req, res, reqx) => {\n         const array = await this.redis.lrangeAsync(reqx.keyspaceKey, req.params.start, req.params.stop);\n         return array.reverse();\n      });\n      this.addKeyspaceCommand({\n         key: 'rrange',\n         params: ['key', 'start', 'stop'],\n         exampleKeyParams: {\n            start: 0,\n            stop: 10,\n         },\n         description: 'get elements from the right of your list',\n         relatedCommands: ['rrevrange', 'lrange', 'llen']\n      }, async (req, res, reqx) => {\n         if (req.params.start < 0) {\n            throw {message: `${reqx.command.key} start must be zero or greater`};\n         }\n         if (req.params.stop < 0) {\n            throw {message: `${reqx.command.key} stop must be zero or greater`};\n         }\n         const array = await this.redis.lrangeAsync(reqx.keyspaceKey, 0 - req.params.stop, 0 - req.params.start - 1);\n         return array.reverse();\n      });\n      this.addKeyspaceCommand({\n         key: 'rrevrange',\n         params: ['key', 'start', 'stop'],\n         exampleKeyParams: {\n            start: 0,\n            stop: 10,\n         },\n         description: 'get elements from the right of your list in reverse order',\n         relatedCommands: ['lrange', 'llen']\n      }, async (req, res, reqx) => {\n         if (req.params.start < 0) {\n            throw {message: `${reqx.command.key} start must be zero or greater`};\n         }\n         if (req.params.stop < 0) {\n            throw {message: `${reqx.command.key} stop must be zero or greater`};\n         }\n         const array = await this.redis.lrangeAsync(reqx.keyspaceKey, 0 - req.params.stop, 0 - req.params.start - 1);\n         return array;\n      });\n      this.addKeyspaceCommand({\n         key: 'hset',\n         params: ['key', 'field', 'value'],\n         access: 'set',\n         description: 'set the string value of a hash field',\n         relatedCommands: ['hget', 'hgetall', 'hkeys', 'hvals']\n      }, async (req, res, reqx) => {\n         return await this.redis.hsetAsync(reqx.keyspaceKey, req.params.field, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'hsetnx',\n         params: ['key', 'field', 'value'],\n         access: 'add',\n         description: 'set the string value of a hash field if it does not exist',\n         relatedCommands: ['hget', 'hgetall', 'hkeys', 'hvals']\n      }, async (req, res, reqx) => {\n         return await this.redis.hsetnxAsync(reqx.keyspaceKey, req.params.field, req.params.value);\n      });\n      this.addKeyspaceCommand({\n         key: 'hget',\n         params: ['key', 'field'],\n         description: 'get the contents of a hash field',\n         relatedCommands: ['hexists', 'hgetall', 'hkeys', 'hvals']\n      }, async (req, res, reqx) => {\n         return await this.redis.hgetAsync(reqx.keyspaceKey, req.params.field);\n      });\n      this.addKeyspaceCommand({\n         key: 'hdel',\n         params: ['key', 'field'],\n         access: 'set',\n         description: 'delete a hash field',\n         relatedCommands: ['hexists', 'hget']\n      }, async (req, res, reqx) => {\n         return await this.redis.hdelAsync(reqx.keyspaceKey, req.params.field);\n      });\n      this.addKeyspaceCommand({\n         key: 'hincrby',\n         params: ['key', 'field', 'increment'],\n         access: 'add',\n         description: 'increment the integer value of a hash field',\n         relatedCommands: ['hget']\n      }, async (req, res, reqx) => {\n         return await this.redis.hincrbyAsync(reqx.keyspaceKey, req.params.field, req.params.increment);\n      });\n      this.addKeyspaceCommand({\n         key: 'hexists',\n         params: ['key', 'field'],\n         description: 'check if the hash field exists',\n         relatedCommands: ['hkeys', 'hgetall']\n      }, async (req, res, reqx) => {\n         const reply = await this.redis.hexistsAsync(reqx.keyspaceKey, req.params.field);\n         return reply;\n      });\n      this.addKeyspaceCommand({\n         key: 'hlen',\n         params: ['key'],\n         description: 'get the number of fields in a hash',\n         relatedCommands: ['hkeys', 'hvals', 'hgetall']\n      }, async (req, res, reqx) => {\n         return await this.redis.hlenAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'hkeys',\n         params: ['key'],\n         description: 'get the keys of the fields in your hashes',\n         relatedCommands: ['hlen', 'hvals', 'hgetall']\n      }, async (req, res, reqx) => {\n         return await this.redis.hkeysAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'hvals',\n         params: ['key'],\n         description: 'get all the values in a hash',\n         relatedCommands: ['hkeys', 'hgetall']\n      }, async (req, res, reqx) => {\n         return await this.redis.hkeysAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'hgetall',\n         params: ['key'],\n         description: 'get all the fields in a hash',\n         relatedCommands: ['hlen', 'hkeys', 'hvals']\n      }, async (req, res, reqx) => {\n         return await this.redis.hgetallAsync(reqx.keyspaceKey);\n      });\n      this.addKeyspaceCommand({\n         key: 'zcard',\n         params: ['key'],\n         description: 'get the cardinality of the zset',\n         relatedCommands: ['zrange', 'zrevrange']\n      }, async (req, res, reqx) => {\n         return await this.redis.zcardAsync(reqx.keyspaceKey);\n      });\n      if (this.config.redisVersion && this.config.redisVersion[0] >= 3) {\n         this.addKeyspaceCommand({\n            key: 'zaddnx',\n            params: ['key', 'score', 'member'],\n            access: 'add',\n            description: 'add a member to a sorted set if it does not exist',\n            relatedCommands: ['zrange', 'zcard'],\n         }, async (req, res, reqx) => {\n            return await this.redis.zaddAsync(reqx.keyspaceKey, 'NX', req.params.score, req.params.member);\n         });\n      }\n      this.addKeyspaceCommand({\n         key: 'zincrby',\n         params: ['key', 'increment', 'member'],\n         access: 'add',\n         description: 'increment the score of a member of a sorted set',\n         relatedCommands: ['zrange', 'zcard']\n      }, async (req, res, reqx) => {\n         return await this.redis.zincrbyAsync(reqx.keyspaceKey, req.params.increment, req.params.member);\n      });\n      this.addKeyspaceCommand({\n         key: 'zadd',\n         params: ['key', 'score', 'member'],\n         access: 'add',\n         description: 'add a member to a sorted set',\n         relatedCommands: ['zrange', 'zcard']\n      }, async (req, res, reqx) => {\n         return await this.redis.zaddAsync(reqx.keyspaceKey, req.params.score, req.params.member);\n      });\n      this.addKeyspaceCommand({\n         key: 'zrem',\n         params: ['key', 'member'],\n         access: 'set',\n         description: 'remove a member from a sorted set',\n         relatedCommands: ['zrange', 'zcard']\n      }, async (req, res, reqx) => {\n         return await this.redis.zremAsync(reqx.keyspaceKey, req.params.member);\n      });\n      this.addKeyspaceCommand({\n         key: 'zrange',\n         params: ['key', 'start', 'stop'],\n         description: 'range items in the zset',\n         exampleKeyParams: [0, 10],\n         relatedCommands: ['zrevrange', 'zcard']\n      }, async (req, res, reqx) => {\n         return await this.redis.zrangeAsync(reqx.keyspaceKey, req.params.start, req.params.stop);\n      });\n      this.addKeyspaceCommand({\n         key: 'zrevrange',\n         params: ['key', 'start', 'stop'],\n         description: 'reverse range items in the zset',\n         relatedCommands: ['zrange', 'zcard']\n      }, async (req, res, reqx) => {\n         return await this.redis.zrevrangeAsync(reqx.keyspaceKey, req.params.start, req.params.stop);\n      });\n      this.addKeyspaceCommand({\n         key: 'zrevrange',\n         params: ['key', 'start', 'stop'],\n         description: 'reverse range items in the zset',\n         relatedCommands: ['zrange', 'zcard']\n      }, async (req, res, reqx) => {\n         return await this.redis.zrevrangeAsync(reqx.keyspaceKey, req.params.start, req.params.stop);\n      });\n   }\n\n   listCommands(context) {\n      return this.commands.filter(command => command.access !== 'redirect')\n      .filter(command => !context || command.context === context)\n      .map(command => [command.key, ...command.params].join(' '));\n   }\n\n   formatCommandUri(command) {\n      if (command.params.length) {\n         return [command.key, ... command.params.map(param => ':' + param)].join('/');\n      } else {\n         return command.key;\n      }\n   }\n\n   addPublicCommand(command, fn) {\n      let uri = command.key;\n      if (command.params) {\n         uri = [command.key, ... command.params.map(param => ':' + param)].join('/');\n      }\n      this.expressApp.get([this.config.location, uri].join('/'), async (req, res) => {\n         try {\n            const match = req.path.match(/\\/:([^\\/]+)/);\n            if (match) {\n               throw {message: 'Invalid path: leading colon. Try substituting parameter: ' + match.pop()};\n            }\n            const result = await fn(req, res, {command});\n            if (command.access === 'redirect') {\n            } else if (result !== undefined) {\n               await this.sendResult(command, req, res, {}, result);\n            }\n         } catch (err) {\n            this.sendError(req, res, err);\n         }\n      });\n      this.addCommand(command);\n   }\n\n   addPublicRoute(uri, fn) {\n      uri = [this.config.location, uri].join('/');\n      this.logger.debug('addPublicRoute', uri);\n      this.expressApp.get(uri, async (req, res) => {\n         try {\n            const result = await fn(req, res);\n            if (result !== undefined) {\n               await this.sendResult({}, req, res, {}, result);\n            }\n         } catch (err) {\n            this.sendError(req, res, err);\n         }\n      });\n   }\n\n   addRegisterRoutes() {\n      this.addPublicCommand({\n         key: 'register-ephemeral' // TODO remove 10 june\n      }, async (req, res) => {\n         req.params = {account: 'hub'};\n         return this.createEphemeral(req, res);\n      });\n      this.addPublicCommand({\n         key: 'create-ephemeral'\n      }, async (req, res) => {\n         req.params = {account: 'hub'};\n         return this.createEphemeral(req, res);\n      });\n      this.addPublicCommand({\n         key: 'create-ephemeral-named',\n         params: ['keyspace', 'access']\n      }, async (req, res) => {\n         req.params = {account: 'hub'};\n         return this.createEphemeral(req, res);\n      });\n      this.addPublicCommand({\n         key: 'create-ephemeral-access',\n         params: ['access']\n      }, async (req, res) => {\n         req.params.account = 'hub';\n         return this.createEphemeral(req, res);\n      });\n      this.addPublicCommand({\n         key: 'create-account-telegram',\n         params: ['account'],\n         description: 'create a new account linked to an authoritative Telegram.org account'\n      }, async (req, res, reqx) => {\n         return this.createAccount(req, res, reqx);\n      });\n      this.addPublicCommand({\n         key: 'destroy-account',\n         params: ['account'],\n         description: 'destroy an account'\n      }, async (req, res, reqx) => {\n         let {account, accountKey} = reqx;\n         const scard = await this.redis.multiExecAsync(multi => {\n            multi.scard(this.accountKey(account, 'keyspaces'));\n         });\n         if (scard > 0) {\n            throw {message: 'All keyspaces must be destroyed individually first'};\n         }\n         throw {message: 'Not implemented'};\n      });\n      this.addPublicCommand({\n         key: 'register-cert'\n      }, this.registerCert.bind(this));\n      this.addPublicCommand({\n         key: 'enroll-cert'\n      }, this.registerCert.bind(this));\n   }\n\n   async registerCert(req, res, reqx) {\n      const cert = this.getClientCert(req);\n      if (!cert) throw new ValidationError({message: 'No client cert',\n         hint: this.hints.signup\n      });\n      const dn = this.parseCertDn(req);\n      if (!dn.ou) throw new ValidationError({message: 'No client cert OU name',\n         hint: this.hints.signup\n      });\n      const matching = dn.ou.match(/^([\\-_a-z]+)+%([\\-_a-z]+)@(.*)$/);\n      this.logger.debug('OU', matching);\n      if (!matching) {\n         throw new ValidationError({message: 'Cert OU name not matching \"role%account@domain\"',\n            hint: this.hints.signup\n         });\n      }\n      const [role, account, domain] = matching.slice(1);\n      if (!lodash.endsWith(req.hostname, domain)) {\n         throw new ValidationError({message: 'OU domain not matching: ' + req.hostname,\n            hint: this.hints.signup\n         });\n      }\n      const accountKey = this.adminKey('account', account);\n      const grantKey = this.adminKey('telegram', 'user', account, 'grantcert');\n      const certDigest = this.digestPem(cert);\n      const shortDigest = certDigest.slice(-12);\n      const pemExtract = this.extractPem(cert);\n      const [granted, sismember] = await this.redis.multiExecAsync(multi => {\n         multi.get(grantKey);\n         multi.sismember(this.adminKey('account', account, 'certs'), certDigest);\n      });\n      if (!granted) {\n         throw new ValidationError({message: 'Cert not granted via @redishub_bot',\n            hint: {\n               message: [\n                  `Try @redishub_bot \"/grantcert ${shortDigest}\"`,\n                  `e.g. via https://web.telegram.org,`,\n               ].join(' '),\n               clipboard: shortDigest,\n               url: `https://web.telegram.org/#/im?p=@redishub_bot#grantcert-${shortDigest}`\n            }\n         });\n      }\n      if (granted.indexOf(shortDigest) < 0 &&\n         certDigest.indexOf(granted) < 0 &&\n         pemExtract != granted) {\n         throw new ValidationError({message: 'Granted cert not matching: ' + shortDigest,\n            hint: {\n               message: `Try @redishub_bot \"/grantcert ${shortDigest}`\n               + ` from the authoritative Telegram account`\n               + ` e.g. via https://web.telegram.org`\n               ,\n               clipboard: shortDigest,\n               url: `https://web.telegram.org/#/im?p=@redishub_bot#grantcert-${shortDigest}`\n            }\n         });\n      }\n      const [del, sadd] = await this.redis.multiExecAsync(multi => {\n         multi.del(grantKey);\n         multi.sadd(this.adminKey('account', account, 'certs'), certDigest);\n      });\n      if (!sadd) {\n         logger.debug('certs sadd');\n      }\n      if (!del) {\n         logger.warn('certs grant del');\n      }\n      return {account, domain};\n   }\n\n   getClientCert(req) {\n      let cert = req.get('ssl_client_cert');\n      if (cert) {\n         cert = cert.replace(/\\t/g, '\\n');\n      }\n      return cert;\n   }\n\n   parseCertDn(req) {\n      const dn = req.get('ssl_client_s_dn');\n      if (!dn) throw new ValidationError({message: 'No client cert DN', hint: this.hints.signup});\n      return this.parseDn(dn);\n   }\n\n   parseDn(dn) {\n      const parts = {};\n      dn.split('/').filter(part => part.length)\n      .forEach(part => {\n         const [name, value] = part.split('=');\n         if (name && value) {\n            parts[name.toLowerCase()] = value;\n         } else {\n            this.logger.warn('parseDn', dn, part, name, value);\n         }\n      });\n      return parts;\n   }\n\n   addAccountRoutes() {\n      if (this.config.secureDomain) {\n         this.addAccountCommand({\n            key: 'grant-cert',\n            params: ['account', 'role', 'certId'],\n            defaultParams: {\n               group: 'admin'\n            },\n            access: 'admin'\n         }, async (req, res, {account, accountKey, time, certDigest}) => {\n            const [cert] = await this.redis.multiExecAsync(multi => {\n               multi.hgetall(this.adminKey('cert', certId));\n            });\n            throw new ApplicationError('Unimplemented');\n         });\n      }\n   }\n\n   async createAccount(req, res) {\n      try {\n         let errorMessage = this.validateRegisterTime();\n         if (errorMessage) {\n            this.sendError(req, res, {message: errorMessage});\n            return;\n         }\n         const {account} = req.params;\n         let v = this.validateRegisterAccount(account);\n         if (v) {\n            throw new ValidationError(v);\n         }\n         const dn = req.get('ssl_client_s_dn');\n         const cert = req.get('ssl_client_cert');\n         this.logger.info('createAccount dn', dn);\n         if (!cert) {\n            throw new ValidationError({message: 'No client cert', hint: this.hints.signup});\n         }\n         const certDigest = this.digestPem(cert);\n         const otpSecret = this.generateTokenKey();\n         const accountKey = this.adminKey('account', account);\n         const [hsetnx, saddAccount, saddCert] = await this.redis.multiExecAsync(multi => {\n            multi.hsetnx(accountKey, 'registered', new Date().getTime());\n            multi.sadd(this.adminKey('accounts'), account);\n            multi.sadd(this.adminKey('account', account, 'topt'), otpSecret);\n            multi.sadd(this.adminKey('account', account, 'certs'), certDigest);\n         });\n         if (!hsetnx) {\n            throw {message: 'Account exists'};\n         }\n         if (!saddAccount) {\n            this.logger.error('sadd account');\n         }\n         if (!saddCert) {\n            this.logger.error('sadd cert');\n         }\n         const result = this.buildQrReply({\n            otpSecret,\n            user: account,\n            host: this.config.hostDomain,\n            label: this.config.serviceLabel\n         });\n         await this.sendResult({}, req, res, {}, result);\n      } catch (err) {\n         this.sendError(req, res, err);\n      }\n   }\n\n   async addAccountCommand(command, fn) {\n      let uri = [command.key];\n      if (command.params) {\n         uri = [command.key, ...command.params.map(param => ':' + param)];\n      }\n      if (command.access !== 'admin') {\n         this.logger.warn('AddAccountCommand access', command.access);\n      }\n      this.expressApp.get([this.config.location, ...uri].join('/'), async (req, res) => {\n         try {\n            let message = this.validatePath(req);\n            if (message) throw {message};\n            const {account} = req.params;\n            const accountKey = this.adminKey('account', account);\n            const [[time], admined, certs] = await this.redis.multiExecAsync(multi => {\n               multi.time();\n               multi.hget(accountKey, 'admined');\n               multi.smembers(this.adminKey('account', account, 'certs'));\n            });\n            this.logger.debug('admin command', {account, accountKey, time, admined, certs});\n            if (!admined) {\n               //throw {message: 'Invalid account'};\n            }\n            if (lodash.isEmpty(certs)) {\n               throw {message: 'No certs'};\n            }\n            const duration = time - admined;\n            if (duration < this.config.adminLimit) {\n               return `Admin command interval not elapsed: ${this.config.adminLimit}s`;\n            }\n            const certDigest = this.validateCert(req, certs, account);\n            const reqx = {command, account, accountKey, time, admined, certDigest};\n            const result = await fn(req, res, reqx);\n            if (result !== undefined) {\n               await this.sendResult(command, req, res, reqx, result);\n            }\n         } catch (err) {\n            this.sendError(req, res, err);\n         }\n      });\n   }\n\n   generateTokenKey(length = 16) {\n      const Base32Symbols = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n      return lodash.reduce(crypto.randomBytes(length), (result, value) => {\n         return result + Base32Symbols[Math.floor(value * Base32Symbols.length / 256)];\n      }, '');\n   }\n\n   formatTokenKey(tokenKey) {\n      return tokenKey.match(/.{1,4}/g).join(' ');\n   }\n\n   generateTokenCode(otpSecret, time) { // TODO test generating a TOTP token from secret\n      try {\n         time = Math.floor((time || (new Date().getTime())/1000)/30);\n         this.logger.info('base32', Object.keys(base32));\n         this.logger.info('speakeasy', Object.keys(speakeasy.totp));\n         this.logger.debug('otplib generateSecret', otp.utils.generateSecret());\n         this.logger.debug('otplib', otp.topt.generate(base32.decode(otpSecret), time));\n      } catch (err) {\n         this.logger.error('generateTokenCode', err);\n      }\n   }\n\n   buildQrReply(options) {\n      let {label, account, user, host, otpSecret, issuer} = options;\n      if (!otpSecret) {\n         otpSecret = this.generateTokenKey();\n      }\n      //this.logger.debug('code', this.generateTokenCode(otpSecret));\n      if (!issuer) {\n         issuer = label || host;\n      }\n      if (!account && user && host) {\n         account = `${user}@${host}`;\n      }\n      if (!account || !issuer) {\n         throw {message: 'Invalid'};\n      }\n      const uri = `${account}?secret=${otpSecret}&issuer=${issuer}`;\n      const otpauth = 'otpauth://totp/' + encodeURIComponent(uri);\n      const googleChartUrl = 'http://chart.googleapis.com/chart?chs=200x200&chld=M|0&cht=qr&chl=' + otpauth;\n      return {otpSecret, uri, otpauth, googleChartUrl};\n   }\n\n   validateRegisterTime() {\n      const time = new Date().getTime();\n      if (!this.registerTime) {\n         this.registerTime = time;\n      } else {\n         const duration = time - this.registerTime;\n         if (duration > 1000) {\n            this.registerTime = time;\n            this.registerCount = 0;\n         } else {\n            this.registerCount++;\n         }\n         if (this.registerCount > this.config.registerLimit) {\n            this.logger.error('registerCount');\n            return `Global register rate exceeed: ${this.config.registerLimit} per second`;\n         }\n      }\n      this.registerTime = time;\n   }\n\n   async createEphemeral(req, res, previousError) {\n      let {account, keyspace, access} = req.params;\n      assert(account, 'account');\n      if (!keyspace) {\n         keyspace = this.generateTokenKey(12).toLowerCase();\n      } else {\n         const v = this.validateRegisterKeyspace(keyspace);\n         if (v) {\n            throw {message: v, keyspace};\n         }\n      }\n      if (!access) {\n      } else if (access === 'add') {\n         keyspace = '+' + keyspace;\n      } else if (access) {\n         this.sendError(req, res, {message: 'Access unimplemented: ' + access, hint: {\n            message: 'Try access: add',\n            description: 'Currently only \"add\" limited access is supported.'\n         }});\n      }\n      if (previousError) {\n         this.logger.warn('createEphemeral retry');\n      }\n      try {\n         this.logger.debug('createEphemeral');\n         let errorMessage = this.validateRegisterTime();\n         if (errorMessage) {\n            this.sendError(req, res, {message: errorMessage});\n            return;\n         }\n         let clientIp = req.get('x-forwarded-for');\n         const accountKey = this.accountKeyspace(account, keyspace);\n         this.logger.debug('createEphemeral clientIp', clientIp, account, keyspace, accountKey);\n         const replies = await this.redis.multiExecAsync(multi => {\n            multi.hsetnx(accountKey, 'registered', new Date().getTime());\n            if (clientIp) {\n               multi.hsetnx(accountKey, 'clientIp', clientIp);\n               if (this.config.addClientIp) {\n                  multi.sadd(this.adminKey('keyspaces:ephemeral:ips'), clientIp);\n               }\n            }\n            //this.count(multi, 'keyspaces:ephemeral'); // TODO del old keyspaces:expire\n         });\n         if (!replies[0]) {\n            this.logger.error('keyspace clash', account, keyspace);\n            if (!previousError) {\n               return this.createEphemeral(req, res, {message: 'keyspace clash'});\n            }\n            throw {message: 'Keyspace already exists'};\n         }\n         const replyPath = ['ak', account, keyspace].join('/');\n         this.logger.debug('createEphemeral replyPath', replyPath);\n         if (this.isBrowser(req)) {\n            res.redirect(302, ['', replyPath, 'help'].join('/'));\n         } else {\n            return replyPath;\n         }\n      } catch (err) {\n         this.sendError(req, res, err);\n      }\n   }\n\n   count(multi, key) {\n      multi.incr(this.adminKey(`metrics:${key}:count`));\n   }\n\n   validateImportTime() {\n      const time = new Date().getTime();\n      if (!this.importTime) {\n         this.importTime = time;\n      } else {\n         const duration = time - this.importTime;\n         if (duration > 1000) {\n            this.importTime = time;\n            this.importCount = 0;\n         } else {\n            this.importCount++;\n         }\n         if (this.importCount > this.config.importLimit) {\n            this.logger.error('importCount');\n            return `Global import rate exceeed: ${this.config.importLimit} per second`;\n         }\n      }\n      this.importTime = time;\n   }\n\n   addCommand(command) {\n      assert(command.key);\n      this.commands.push(command);\n      this.commandMap.set(command.key, command);\n   }\n\n   addKeyspaceCommand(command, fn) {\n      assert(command.key, 'command.key');\n      command.context = 'keyspace';\n      let uri = 'ak/:account/:keyspace';\n      command.params = command.params || [];\n      const key = command.key + command.params.length;\n      this.logger.debug('addKeyspaceCommand', command.key, key, uri);\n      this.addCommand(command);\n      const handler = this.createKeyspaceHandler(command, fn);\n      if (command.key === this.config.indexCommand) {\n         this.expressApp.get([this.config.location, uri].join('/'), handler);\n      }\n      uri += '/' + command.key;\n      if (command.params.length) {\n         assert(command.key !== this.config.indexCommand, 'indexCommand');\n         uri += '/' + command.params.map(param => ':' + param).join('/');\n      }\n      this.expressApp.get([this.config.location, uri].join('/'), handler);\n      this.logger.debug('add', command.key, uri);\n   }\n\n   createKeyspaceHandler(command, fn) {\n      return async (req, res) => {\n         try {\n            const {account, keyspace, key, timeout} = req.params;\n            assert(account, 'account');\n            assert(keyspace, 'keyspace');\n            const accountKey = this.accountKeyspace(account, keyspace);\n            const helpPath = `/ak/${account}/${keyspace}/help`;\n            const reqx = {account, keyspace, accountKey, key, helpPath, command};\n            if (key) {\n               reqx.keyspaceKey = this.keyspaceKey(account, keyspace, key);\n            }\n            req.rquery = reqx;\n            let v;\n            //await this.migrateKeyspace(req.params);\n            v = this.validateAccount(account);\n            if (v) {\n               this.sendStatusMessage(req, res, 400, 'Invalid account: ' + v);\n               return;\n            }\n            v = this.validateKeyspace(keyspace);\n            if (v) {\n               this.sendStatusMessage(req, res, 400, 'Invalid keyspace: ' + v);\n               return;\n            }\n            v = this.validateKey(key);\n            if (v) {\n               this.sendStatusMessage(req, res, 400, 'Invalid key: ' + v);\n               return;\n            }\n            if (timeout) {\n               if (!/^[0-9]$/.test(timeout)) {\n                  this.sendStatusMessage(req, res, 400, 'Invalid timeout: require range 1 to 9 seconds');\n                  return;\n               }\n            }\n            const isSecureAccount = !/^(pub|hub)$/.test(account);\n            const [[time], registered, admined, accessed, certs] = await this.redis.multiExecAsync(multi => {\n               multi.time();\n               multi.hget(accountKey, 'registered');\n               multi.hget(accountKey, 'admined');\n               multi.hget(accountKey, 'accessed');\n               if (isSecureAccount) {\n                  multi.smembers(this.adminKey('account', account, 'certs'));\n               }\n            });\n            Objects.kvs({time, registered, admined, accessed}).forEach(kv => {\n               reqx[kv.key] = parseInt(kv.value);\n            });\n            this.validateAccess(req, reqx, {certs});\n            let hostname;\n            if (req.hostname === this.config.hostDomain) {\n            } else if (lodash.endsWith(req.hostname, this.config.keyspaceHostname)) {\n               hostname = req.hostname.replace(/\\..*$/, '');\n               let hostHashes = await this.redis.hgetallAsync(this.adminKey('host', hostname));\n               if (!hostHashes) {\n                  throw new ValidationError(`Invalid host: ${hostname}`);\n               }\n               this.logger.debug('hostHashes', hostHashes);\n               if (!hostHashes.keyspaces) {\n                  throw new ValidationError(`Invalid host: ${hostname}`);\n               }\n               if (!lodash.includes(hostHashes.keyspaces, keyspace)) {\n                  throw new ValidationError(`Invalid keyspace: ${keyspace}`);\n               }\n            }\n            if (!keyspace) {\n               throw new ValidationError('Missing keyspace: ' + req.path);\n            }\n            if (timeout) {\n               if (timeout < 1 || timeout > 10) {\n                  throw new ValidationError('Timeout must range from 1 to 10 seconds: ' + timeout);\n               }\n            }\n            const multi = this.redis.multi();\n            multi.sadd(this.adminKey('keyspaces'), keyspace);\n            multi.hset(accountKey, 'accessed', time);\n            if (command && command.access === 'admin') {\n               multi.hset(accountKey, 'admined', time);\n            }\n            const result = await fn(req, res, reqx, multi);\n            if (result !== undefined) {\n               await this.sendResult(command, req, res, reqx, result);\n            }\n            if (key) {\n               assert(reqx.keyspaceKey);\n               const expire = this.getKeyExpire(account);\n               multi.expire(reqx.keyspaceKey, expire);\n               this.logger.debug('expire', reqx.keyspaceKey, expire);\n            }\n            const [...expire] = await multi.execAsync();\n            if (!expire) {\n               throw new ApplicationError('expire: ' + reqx.keyspaceKey);\n            }\n         } catch (err) {\n            this.sendError(req, res, err);\n         }\n      };\n   }\n\n   getKeyExpire(account) {\n      if (account === 'hub') {\n         return this.config.ephemeralKeyExpire;\n      } else {\n         return this.config.keyExpire;\n      }\n   }\n\n   async migrateKeyspace({account, keyspace}) {\n      const accountKey = this.accountKeyspace(account, keyspace);\n      const [accessToken, token] = await this.redis.multiExecAsync(multi => {\n         multi.hget(accountKey, 'accessToken');\n         multi.hget(accountKey, 'token');\n      });\n      if (!token && accessToken) {\n         const [hsetnx, hdel] = await this.redis.multiExecAsync(multi => {\n            multi.hsetnx(accountKey, 'token', accessToken);\n            multi.hdel(accountKey, 'accessToken');\n         });\n         if (!hsetnx) {\n            throw new Error('Migrate keyspace hset failed');\n         } else if (!hdel) {\n            throw new Error('Migrate keyspace hdel failed');\n         }\n      }\n   }\n\n   validateRegisterAccount(account) {\n      if (lodash.isEmpty(account)) {\n         return 'Invalid account (empty)';\n      } else if (['hub', 'pub', 'public'].includes(account)) {\n         return 'Invalid account (reserved name)';\n      } else if (!/^[\\-_a-z0-9]+$/.test(account)) {\n         return 'Account name is invalid. Try only lowercase/numeric with dash/underscore.';\n      }\n   }\n\n   validatePath(req) {\n      const match = req.path.match(/\\/:([^\\/]+)/);\n      if (match) {\n         return 'Invalid path: leading colon. Try substituting parameter: ' + match.pop();\n      }\n   }\n\n   validateRegisterKeyspace(keyspace) {\n      if (/~/.test(keyspace)) {\n         return 'contains tilde';\n      }\n   }\n\n   validateAccount(account) {\n      if (/^:/.test(account)) {\n         return 'leading colon';\n      }\n   }\n\n   validateKeyspace(keyspace) {\n      if (/^:/.test(keyspace)) {\n         return 'leading colon';\n      }\n      if (/::/.test(keyspace)) {\n         return 'double colon';\n      }\n      if (/:$/.test(keyspace)) {\n         return 'trailing colon';\n      }\n   }\n\n   validateKey(key) {\n      if (/^:/.test(key)) {\n         return 'leading colon';\n      }\n   }\n\n   isReadCommand(command) {\n      if (!command) {\n         return false;\n      } else if (!command.access) {\n         return true;\n      } else if (command.access === 'debug') {\n         return true;\n      }\n      return false;\n   }\n\n   validateAccess(req, reqx, {certs}) {\n      const {command, account, keyspace, time} = reqx;\n      const scheme = req.get('X-Forwarded-Proto');\n      this.logger.debug('validateAccess scheme', scheme, account, keyspace, command);\n      if (this.isSecureDomain(req)) {\n         if (scheme === 'http') {\n            throw {message: `Insecure scheme ${scheme}: ${req.hostname}`};\n         }\n      }\n      if (account !== 'hub' && account !== 'pub') {\n         this.validateCert(req, certs, account);\n      }\n      if (command.key === 'create-keyspace') {\n         if (reqx.registered) {\n            throw {message: 'Already registered'};\n         }\n      } else if (!reqx.registered) {\n         if (account === 'hub' || account === 'pub') {\n            throw {message: 'Expired (or unregistered) keyspace', hint: {\n               uri: 'create-ephemeral',\n               description: 'To register a new ephemeral keyspace'\n            }};\n         } else {\n            throw {message: 'Unregistered keyspace', hint: {\n               uri: 'create-ephemeral',\n               description: 'To register a new ephemeral keyspace'\n            }};\n         }\n      }\n      if (command.access) {\n         if (command.access === 'admin') {\n            if (!reqx.admined) {\n               this.logger.warn('validateAccess admined', keyspace, command.key, time);\n            } else {\n               const duration = time - reqx.admined;\n               if (duration < this.config.adminLimit) {\n                  throw {message: `Admin command interval not elapsed: ${this.config.adminLimit}s`};\n               }\n            }\n         } else if (command.access === 'debug') {\n         } else if (command.access === 'add') {\n            if (!/^[a-z]/.test(keyspace)) {\n               return;\n            }\n         } else if (command.access === 'set') {\n            if (/^\\+/.test(keyspace)) {\n               throw {message: 'Append-only keyspace'};\n            }\n         } else if (command.access === 'get') {\n         } else {\n         }\n      }\n   }\n\n   validateCert(req, certs, account) {\n      if (this.config.disableValidateCert) {\n         return;\n      }\n      if (!certs) {\n         throw {message: 'No enrolled certs', hint: {\n            commandKey: ['create-account-telegram']\n         }};\n      }\n      const cert = req.get('ssl_client_cert');\n      if (!cert) {\n         throw {message: 'No client cert sent', hint: {\n            commandKey: ['create-account-telegram']\n         }};\n      }\n      const certDigest = this.digestPem(cert);\n      if (!certs.includes(certDigest)) {\n         this.logger.info('validateCert', account, certDigest, certs);\n         throw {message: 'Invalid cert', hint: {\n            accountKey: ['create-account-telegram']\n         }};\n      }\n      return certDigest;\n   }\n\n   keyIndex(account, keyspace) {\n      return [this.config.redisKeyspace, account, keyspace].reduce((previousValue, currentValue) => {\n         return previousValue + currentValue.length\n      }, 3);\n   }\n\n   accountKey(account, ...more) {\n      return this.adminKey('account', account, ...more);\n   }\n\n   accountKeyspace(account, keyspace) {\n      return [this.config.redisKeyspace, 'ak', account, keyspace].join(':');\n   }\n\n   keyspaceKey(account, keyspace, key) {\n      return [this.config.redisKeyspace, account, keyspace, key].join('~');\n   }\n\n   adminKey(...parts) {\n      return [this.config.redisKeyspace, ...parts].join(':');\n   }\n\n   async sendResult(command, req, res, reqx, result) {\n      const userAgent = req.get('User-Agent');\n      const uaMatch = userAgent.match(/\\s([A-Z][a-z]*\\/[\\.0-9]+)\\s/);\n      this.logger.debug('sendResult ua', !uaMatch? userAgent: uaMatch[1]);\n      command = command || {};\n      const mobile = this.isMobile(req);\n      this.logger.debug('sendResult mobile', mobile, command.key);\n      if (this.isDevelopment(req)) {\n         this.logger.debug('sendResult command', command.key, req.params, lodash.isArray(result));\n      } else {\n      }\n      if (command.sendResult) {\n         if (lodash.isFunction(command.sendResult)) {\n            const otherResult = await command.sendResult(req, res, reqx, result);\n            if (otherResult === undefined) {\n               return;\n            } else {\n               result = otherResult;\n            }\n         } else {\n            throw {message: 'command.sendResult type: ' + typeof command.sendResult};\n         }\n      }\n      let resultString = '';\n      if (!Values.isDefined(result)) {\n         this.logger.error('sendResult none');\n      } else if (Values.isDefined(req.query.json) || (command.format === 'json' && !mobile)) {\n         res.json(result);\n         return;\n      } else if (Values.isDefined(req.query.quiet)) {\n      } else if (this.config.defaultFormat === 'cli' || Values.isDefined(req.query.line)\n      || this.isCliDomain(req) || command.format === 'cli') {\n         res.set('Content-Type', 'text/plain');\n         if (lodash.isArray(result)) {\n            if (mobile) {\n            } else {\n               resultString = result.join('\\n');\n            }\n         } else if (lodash.isObject(result)) {\n            if (command.resultObjectType === 'KeyedArrays') {\n               resultString = lodash.flatten(Object.keys(result).map(key => {\n                  let value = result[key];\n                  if (lodash.isArray(value)) {\n                     return ['', key + ':', ...value];\n                  } else if (typeof value === 'string') {\n                     if (key === 'message') {\n                        return value;\n                     } else {\n                        return key + ': ' + value;\n                     }\n                  } else {\n                     return ['', key + ':', 'type:' + typeof value];\n                  }\n               })).join('\\n');\n            } else {\n               resultString = Object.keys(result).map(key => {\n                  let value = result[key];\n                  if (parseInt(value) === value) {\n                     value = parseInt(value);\n                  } else {\n                     value = `'${value}'`;\n                  }\n                  return [key, value].join('=');\n               }).join('\\n');\n            }\n         } else if (result === null) {\n         } else {\n            resultString = result.toString();\n         }\n      } else if (this.config.defaultFormat === 'plain' || Values.isDefined(req.query.plain)\n      || command.format === 'plain') {\n         res.set('Content-Type', 'text/plain');\n         if (lodash.isArray(result)) {\n            resultString = result.join('\\n');\n         } else {\n            resultString = result.toString();\n         }\n      } else if (this.config.defaultFormat === 'json' && !mobile) {\n         res.json(result);\n         return;\n      } else if (this.config.defaultFormat === 'html' || Values.isDefined(req.query.html)\n      || command.format === 'html' || this.isHtmlDomain(req) || mobile) {\n         return this.sendHtmlResult(command, req, res, reqx, result);\n      } else {\n         this.sendError(req, res, {message: `Invalid default format: ${this.config.defaultFormat}`});\n         return;\n      }\n      res.send(resultString + '\\n');\n   }\n\n   sendHtmlResult(command, req, res, reqx, result) {\n      let title = this.config.serviceLabel;\n      let heading, icon;\n      if (reqx.account && reqx.keyspace) {\n         const keyspaceLabel = KeyspaceHelp.obscureKeyspaceLabel(reqx);\n         title = `${reqx.account}/${keyspaceLabel}`;\n         heading = [Hc.b(reqx.account), Hs.tt(styles.header.keyspace, keyspaceLabel)].join(''),\n         icon = 'database';\n      }\n      let resultString = '';\n      let resultArray = [];\n      if (!Values.isDefined(result)) {\n      } else if (result === null) {\n      } else if (Values.isInteger(result)) {\n         resultString = result.toString();\n      } else if (lodash.isString(result)) {\n         resultString = result;\n      } else if (lodash.isArray(result)) {\n         if (lodash.isFunction(command.renderHtmlEach)) {\n            resultArray = result.map(element => command.renderHtmlEach(element));\n         } else {\n            resultArray = result;\n         }\n      } else if (lodash.isObject(result)) {\n         resultArray = Object.keys(result).map(key => `<b>${key}</b> ${result[key]}`);\n      } else if (result) {\n         resultString = result.toString();\n      }\n      res.set('Content-Type', 'text/html');\n      const content = [];\n      this.logger.debug('sendResult reqx', reqx, command, resultString, resultArray.length);\n      if (command.key) {\n         content.push(Hso.div(styles.result.commandKey, command.key.replace(/-/g, ' ')));\n      }\n      if (reqx.key) {\n         content.push(Hso.div(styles.result.reqKey, reqx.key));\n      }\n      if (command.params) {\n         content.push(Hso.pre(styles.result.commandParams, command.params\n            .filter(key => key !== 'key')\n            .map(key => `<b>${key}</b> ${req.params[key]}`)\n            .join('\\n'))\n         );\n         this.logger.info('params', lodash.last(content));\n      }\n      let statusCode = 200;\n      let emptyMessage;\n      if (resultArray.length) {\n         if (resultString) {\n            this.logger.error('sendResult resultString', command, req.path);\n         }\n      } else if (!resultString) {\n         //statusCode = 404;\n         resultString = '<i>&lt;empty&gt;</i>';\n      }\n      if (resultString) {\n         resultArray.push(resultString);\n      }\n      content.push(Hs.pre(styles.result.resultArray, lodash.compact(resultArray).join('\\n')));\n      let hints = [];\n      if (command && reqx.account && reqx.keyspace) {\n         if (command.relatedCommands) {\n            try {\n               hints = this.getRelatedCommandHints(req, reqx, command.relatedCommands);\n            } catch (err) {\n               this.logger.error('related', err, err.stack);\n            }\n         }\n         hints.push({\n            uri: ['help'],\n            description: 'view sample keyspace commands'\n         });\n         const otherHints = hints.filter(hint => !hint.uri && hint.commandKey);\n         hints = hints\n         .filter(hint => hint.uri);\n         const renderedPathHints = hints\n         .map(hint => {\n            const path = HtmlElements.renderPath(['ak', reqx.account, reqx.keyspace, ...hint.uri].join('/'));\n            hint = Object.assign({path}, hint);\n            return hint;\n         })\n         .map(hint => {\n            const uriLabel = [Hc.b(hint.uri[0]), ...hint.uri.slice(1)].join('/');\n            this.logger.debug('hint', uriLabel, hint);\n            return He.div({\n               style: styles.result.hint.container,\n               onClick: HtmlElements.onClick(hint.path)\n            }, [\n               Hso.div(styles.result.hint.message, hint.message),\n               Hso.div(styles.result.hint.link, `Try: ` + Hs.tt(styles.result.hint.uri, uriLabel)),\n               Hso.div(styles.result.hint.description, lodash.capitalize(hint.description))\n            ]);\n         });\n         this.logger.debug('renderedPathHints', renderedPathHints);\n         content.push(renderedPathHints);\n         const renderedOtherHints = otherHints.map(hint => He.div({\n            style: styles.result.hint.container\n         }, [\n            Hso.div(styles.result.hint.message, hint.message),\n            Hso.div(styles.result.hint.link, `Try: ` + Hs.tt(styles.result.hint.uri, Hc.b(hint.commandKey))),\n            Hso.div(styles.result.hint.description, hint.description)\n         ]));\n         content.push(renderedOtherHints);\n      }\n      res.status(statusCode).send(renderPage({\n         config: this.config, req, reqx, title, heading, icon, content\n      }));\n   }\n\n   getRelatedCommandHints(req, reqx, relatedCommands) {\n      return lodash.compact(relatedCommands\n         .map(commandKey => this.commandMap.get(commandKey))\n         .filter(command => command && command.key && command.params)\n         .filter(command => !this.isSecureDomain(req)\n         || !command.access || lodash.includes(['get', 'debug']\n         , command.access))\n         .map(command => {\n            let uri = [command.key];\n            const params = command.params\n            .map(key => {\n               let value = req.params[key] || [];\n               if (command && command.exampleKeyParams && command.exampleKeyParams.hasOwnProperty(key)) {\n                  value = command.exampleKeyParams[key]\n               }\n               this.logger.info('related', key, value);\n               return value;\n            });\n            this.logger.info('related params', params);\n            if (params.length !== command.params.length) {\n               this.logger.warn('params length', command);\n               return null;\n            } else {\n               uri = uri.concat(...params);\n            }\n            return {\n               uri,\n               description: command.description\n            };\n         })\n      );\n   }\n\n   isDevelopment(req) {\n      return req.hostname === 'localhost' && process.env.NODE_ENV === 'development';\n   }\n\n   isSecureDomain(req) {\n      if (this.config.secureDomain) {\n         return true;\n      }\n      if (/^(secure|cli)\\./.test(req.hostname)) {\n         this.logger.warn('isSecureDomain', req.hostname);\n         return true;\n      }\n      return false;\n   }\n\n   isMobile(req) {\n      return /(Mobile|iPhone)/.test(req.get('User-Agent'));\n   }\n\n   isBrowser(req) {\n      return !/^curl\\//.test(req.get('User-Agent'));\n   }\n\n   isHtmlDomain(req) {\n      return /^web/.test(req.hostname);\n   }\n\n   isJsonDomain(req) {\n      return /^json/.test(req.hostname);\n   }\n\n   isCliDomain(req) {\n      return /^cli/.test(req.hostname) || !this.isBrowser(req) || this.config.cliDomain;\n   }\n\n   sendError(req, res, err) {\n      if (lodash.isError(err) && err.name !== 'ValidationError') {\n         this.logger.warn(err);\n      }\n      if (err.context) {\n         this.logger.warn(err.context);\n      }\n      try {\n         this.sendStatusMessage(req, res, 500, err);\n      } catch (error) {\n         this.logger.error(error);\n      }\n   }\n\n   sendCommandError(command, req, res, reqx, err) {\n      this.logger.warn(err.message);\n      try {\n         this.sendStatusMessage(req, res, 500, err);\n      } catch (error) {\n         this.logger.error(error);\n      }\n   }\n\n   sendStatusMessage(req, res, statusCode, err) {\n      const reqx = req.rquery || {};\n      const command = reqx.command || {};\n      this.logger.warn('status', req.path, statusCode, typeof err, err);\n      let messageLines = [];\n      if (!err) {\n         this.logger.error('sendStatusMessage empty');\n         err = 'empty error message';\n      }\n      let title = req.path;\n      let hints = [];\n      if (lodash.isString(err)) {\n         title = err;\n      } else if (lodash.isArray(err)) {\n         messageLines = messageLines.concat(err);\n      } else if (typeof err === 'object') {\n         if (err.message) {\n            title = err.message;\n         }\n         if (err.hint) {\n            hints.push(err.hint);\n         }\n         if (err.hints) {\n            hints = hints.concat(err.hints);\n         }\n         hints = hints.slice(0).map(hint => {\n            if (hint.url) {\n               if (hint.message) {\n                  if (this.isBrowser(req)) {\n                     if (hint.clipboard) {\n                        const onClick = `window.prompt('Copy to clipboard: Ctrl-C, Enter', '${hint.clipboard}')`;\n                        hint.url = `<a href=\"${hint.url}\" onClick=\"${onClick}\">${hint.message}</a>`;\n                     } else {\n                        hint.url = `<a href=\"${hint.url}\">${hint.message}</a>`;\n                     }\n                     hint.message = '';\n                  } else if (hint.message) {\n                     hint.message = hint.message.replace(/<\\/?(b|tt|i|code|pre)>/g, '');\n                  }\n               }\n            } else if (hint.uri) {\n               let url;\n               if (this.isBrowser(req)) {\n                  url = `/${hint.uri}`;\n               } else if (/localhost/.test(req.hostname)) {\n                  url = `http://localhost:8765/${hint.uri}`;\n               } else {\n                  url = `https://${req.hostname}/${hint.uri}`;\n               }\n               if (this.isBrowser(req)) {\n                  url = `Try <a href=\"${url}\"><tt>${url}</tt></a>`;\n               }\n               hint.url = url;\n            }\n            return hint;\n         });\n         if (err.stack) {\n            if (err.name === 'ValidationError') {\n            } else {\n               messageLines.push(err.stack.split('\\n').slice(0, 5));\n            }\n         }\n      } else {\n         this.logger.error('sendStatusMessage type', typeof err, err);\n         err = 'unexpected error type: ' + typeof err;\n         messageLines.push(Object.keys(err).join(' '));\n      }\n      const heading = [Hc.b('Status'), Hc.tt(statusCode)].join(' ');\n      if (this.isBrowser(req)) {\n         this.logger.debug('hints', hints);\n         res.set('Content-Type', 'text/html');\n         res.status(statusCode).send(renderPage({\n            config: this.config,\n            req, reqx, title, heading,\n            content: [\n               //Hs.div(styles.error.status, `Status ${statusCode}`),\n               Hs.div(styles.error.message, title),\n               Hs.pre(styles.error.detail, lodash.flatten(messageLines).join('\\n')),\n               hints.map(hint => He.div(styles.error.hint, [\n                  Hso.div(styles.error.hintMessage, hint.message),\n                  Hso.div(styles.error.hintUrl, hint.url),\n                  Hso.div(styles.error.hintDescription, hint.description)\n               ])),\n            ]\n         }));\n      } else {\n         this.logger.warn('status lines', req.path, statusCode, messageLines);\n         // TODO hints\n         res.status(statusCode).send(lodash.flatten([title, ...messageLines]).join('\\n') + '\\n');\n      }\n   }\n\n   splitPem(pem) {\n      const lines = pem.split(/[\\n\\t]/);\n      if (lines.length < 8) {\n         throw new ValidationError('Invalid lines');\n      }\n      if (!/^-+BEGIN CERTIFICATE/.test(lines[0])) {\n         throw new ValidationError('Invalid first line');\n      }\n      const contentLines = lines.filter(line => {\n         return line.length > 16 && /^[\\w\\/\\+]+$/.test(line);\n      });\n      if (contentLines.length < 8) {\n         throw new ValidationError('Invalid lines');\n      }\n      return contentLines;\n   }\n\n   extractPem(pem) {\n      const contentLines = this.splitPem(pem);\n      return contentLines[4].slice(-12);\n   }\n\n   digestPem(pem) {\n      const contentLines = this.splitPem(pem);\n      const sha1 = crypto.createHash('sha1');\n      contentLines.forEach(line => sha1.update(new Buffer(line)));\n      const digest = sha1.digest('hex');\n      if (digest.length < 32) {\n         throw new ValidationError('Invalid cert length');\n      }\n      return digest;\n   }\n\n   async end() {\n      this.logger.info('end');\n      if (redis) {\n         await this.redis.quitAsync();\n      }\n      if (this.expressServer) {\n         this.expressServer.close();\n      }\n   }\n}\n"]}