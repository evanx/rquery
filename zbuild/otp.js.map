{"version":3,"sources":["../rquery/otp.js"],"names":[],"mappings":"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","file":"otp.js","sourcesContent":["\nimport expressLib from 'express';\nimport marked from 'marked';\nimport crypto from 'crypto';\nimport CSON from 'season';\nimport base32 from 'thirty-two';\nimport speakeasy from 'speakeasy';\nimport otp from 'otplib/lib/totp';\nimport concatStream from 'concat-stream';\n\nimport * as Files from './Files';\nimport * as Express from './Express';\n\nconst unsupportedAuth = ['twitter.com', 'github.com', 'gitlab.com', 'bitbucket.org'];\nconst supportedAuth = ['telegram.org'];\n\nexport default class {\n\n   async init() {\n      this.logger.info('init');\n   }\n\n   async start() {\n      this.redis = redisLib.createClient(this.config.redisUrl);\n      this.expressApp = expressLib();\n      this.expressApp.use((req, res, next) => {\n         req.pipe(concatStream(content => {\n            req.body = content;\n            next();\n         }));\n      });\n      this.addRoutes();\n      if (this.config.disableTelegramHook) {\n         this.logger.warn('telegram webhook disabled');\n      } else {\n         this.addTelegramWebhook();\n      }\n      this.expressApp.use((req, res) => this.sendErrorRoute(req, res));\n      this.expressServer = await Express.listen(this.expressApp, this.config.port);\n      this.logger.info('listen', this.config.port);\n   }\n\n   sendErrorRoute(req, res) {\n      try {\n         if (/^\\/favicon.ico$/.test(req.path)) {\n            res.status(404).send(`Invalid path: ${req.path}\\n`);\n            return;\n         }\n         const [matching, account, keyspace] = req.path.match(/^\\/ak\\/([a-z]+)\\/([^\\/]+)\\//);\n         this.logger.debug('sendErrorRoute', req.path,  account, keyspace, this.isBrowser(req));\n         if (this.isBrowser(req)) {\n            let redirectPath = '/routes';\n            if (account && keyspace) {\n               redirectPath = ['/ak', account, keyspace, 'help'].join('/');\n            }\n            res.redirect(302, redirectPath);\n         } else {\n            res.status(404).send(`Invalid: ${req.path}. Try /routes or /help.\\n`);\n         }\n      } catch (err) {\n         this.logger.warn(err);\n         throw err;\n      }\n   }\n\n   addSecureDomain() {\n      this.addPublicCommand({\n         key: 'genkey-otp-webhook',\n         params: ['host', 'user', 'webhookDomain']\n      }, async (req, res) => {\n         const {user, host, webhook} = req.params;\n         if (!/^[a-z][a-z0-9-\\.]+\\.[a-z]+$/.test(webhookDomain)) {\n            throw {message: 'Invalid webhook host'};\n         }\n         const supportedDomains = ['test.redishub.com'];\n         if (webhookDomain !== supportedDomains[0]) {\n            throw {message: 'Webhook host not supported. Try: ' + supportedDomains[0]};\n         }\n         const uri = ['webhook', this.config.serviceKey, host, user].join('/');\n         const url = `https://${webhook}/${uri}`;\n         this.logger.debug('webhook url', url, host, user);\n         const response = await Requests.head({url, timeout: this.config.webhookTimeout});\n         if (response.statusCode !== 200) {\n            throw {message: `Webhook ` + response.statusCode, url};\n         }\n         return this.buildQrReply({user, host});\n      });\n   }\n\n   async end() {\n      this.logger.info('end');\n      if (redis) {\n         await this.redis.quitAsync();\n      }\n      if (this.expressServer) {\n         this.expressServer.close();\n      }\n   }\n}\n"]}