{"version":3,"sources":["../lib/Seconds.js"],"names":[],"mappings":"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","file":"Seconds.js","sourcesContent":["// Copyright (c) 2015, Evan Summers (twitter.com/evanxsummers)\n// ISC license, see http://github.com/evanx/redexutil/LICENSE\n\nconst logger = Loggers.create(__filename, 'info');\n\nconst factors = {\n   s: 1,\n   m: 60,\n   h: 60*60,\n   d: 60*60*24\n};\n\nconst that = {\n   factors: factors,\n   now() {\n      return Math.ceil(new Date().getTime()/1000);\n   },\n   format(seconds) {\n      if (seconds < factors.m) {\n         return '' + seconds + 's';\n      } else if (seconds < factors.h) {\n         return '' + parseInt(seconds/factors.m) + 'm';\n      } else if (seconds < factors.d) {\n         return '' + parseInt(seconds/factors.h) + 'h';\n      } else {\n         return '' + parseInt(seconds/factors.d) + 'd';\n      }\n   },\n   parse(string, defaultValue) {\n      if (!string) {\n         logger.warn('parse empty', defaultValue, string);\n         return defaultValue;\n      }\n      const [value, factorKey] = string.match(/^([0-9]+)([a-z]?)$/) || [];\n      if (!Values.isDefined(value)) {\n         throw new ValidationError(`invalid seconds`);\n      } else if (factorKey) {\n         const factor = factors[factorKey];\n         if (!factor) {\n            throw new ValidationError(`invalid seconds factor key: ${factorKey}`);\n         }\n         return value * factor;\n      } else {\n         return value;\n      }\n   },\n   parsePropDefault(object, key, defaultValue) {\n      try {\n         return that.parse(object[key], defaultValue);\n      } catch (err) {\n         throw new ValidationError(`${key}: ${err.message}`);\n      }\n   },\n   parseOptionalKeyDefault(object, key, defaultValue) {\n      if (!object) return defaultValue;\n      if (!Values.isDefined(object[key])) return defaultValue;\n      return that.parsePropDefault(object, key, defaultValue);\n   },\n   fromMinutes(minutes) {\n      return minutes * factors.m;\n   },\n   fromHours(hours) {\n      return hours * factors.h;\n   },\n   fromDays(days) {\n      return days * factors.d;\n   },\n   toDays(seconds) {\n      return Math.ceil(seconds/factors.d);\n   },\n   assert(seconds, message) {\n      message = message + ': ' + seconds;\n      assert(seconds, message);\n      let value = that.parse(seconds, -1);\n      assert(value >= 0, message + ': ' + value);\n      return value;\n   }\n};\n\nfunction getMessage(seconds, message) {\n   return message + ': ' + seconds;\n}\n\nmodule.exports = that;\n"]}