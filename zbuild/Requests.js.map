{"version":3,"sources":["../lib/Requests.js"],"names":[],"mappings":"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","file":"Requests.js","sourcesContent":["// Copyright (c) 2015, Evan Summers (twitter.com/evanxsummers)\n// ISC license, see http://github.com/evanx/redexutil/LICENSE\n\n\nimport requestf from 'request';\n\nconst logger = Loggers.create(__filename, 'debug');\n\nfunction statusCode(err, response) {\n   return err || response.statusCode;\n}\n\nfunction createPromise(options) {\n   const startTime = new Date().getTime();\n   return new Promise((resolve, reject) => {\n      requestf(options, (err, response, content) => {\n         let duration = Millis.getElapsedDuration(startTime);\n         if (duration > options.slow) {\n            logger.warn('request slow', options.url, statusCode(err, response), Millis.formatDuration(duration));\n         } else {\n            logger.debug('response', options, statusCode(err, response), Millis.formatDuration(duration));\n         }\n         if (err) {\n            err.options = options;\n            err.duration = duration;\n            reject(err);\n         } else if (response.statusCode === 200) {\n            resolve([response, content]);\n         } else {\n            resolve([response]);\n         }\n      });\n   });\n}\n\nexport async function content(options) {\n   return contentOptions(processOptions(options));\n}\n\nexport function json(options) {\n   return contentOptions(processOptions(options), {json: true});\n}\n\nasync function contentOptions(options) {\n   let [response, content] = await createPromise(options);\n   if (response.statusCode !== 200) {\n      throw {options: options, statusCode: response.statusCode};\n   }\n   return content;\n}\n\nexport async function head(options) {\n   const [response] = await createPromise(options);\n   return response;\n}\n\nfunction processOptions(options, assign) {\n   if (typeof options === 'string') {\n      options = {url: options, slow: 8000};\n   } else if (typeof options === 'object') {\n      assert(options.url, 'url');\n      options.headers = options.headers || {};\n      if (options.lastModified) {\n         Object.assign(options.headers, {'If-Modified-Since': options.lastModified});\n      }\n      if (options.username && options.password) {\n         let auth = 'Basic ' + new Buffer(options.username + ':' + options.password).toString('base64');\n         Object.assign(options.headers, {'Authorization': auth});\n      }\n      if (!options.slow) {\n         options.slow = 8000;\n      }\n   } else {\n      throw {message: 'Invalid request options'};\n   }\n   if (assign) {\n      return Object.assign(options, assign);\n   }\n   return options;\n}\n"]}