{"version":3,"sources":["../lib/Millis.js"],"names":[],"mappings":"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","file":"Millis.js","sourcesContent":["// Copyright (c) 2015, Evan Summers (twitter.com/evanxsummers)\n// ISC license, see http://github.com/evanx/redexutil/LICENSE\n\nconst logger = Loggers.create(__filename, 'info');\n\nfunction getMessage(millis, message) {\n   return message + ': ' + millis;\n}\n\nconst factors = {\n   ms: 1,\n   s: 1000,\n   m: 1000*60,\n   h: 1000*60*60,\n   d: 1000*60*60*24\n};\n\nvar that = {\n   format(millis) { // TODO deprecate\n      return that.formatDuration(millis);\n   },\n   formatTimestamp(epoch) {\n      return new Date(epoch).toISOString();\n   },\n   formatDuration(millis) {\n      if (millis < factors.s) {\n         return '' + millis + 'ms';\n      } else if (millis < factors.m) {\n         return '' + parseInt(millis/factors.s) + 's';\n      } else if (millis < factors.h) {\n         return '' + parseInt(millis/factors.m) + 'm';\n      } else if (millis < factors.d) {\n         return '' + parseInt(millis/factors.h) + 'h';\n      } else {\n         return '' + parseInt(millis/factors.d) + 'd';\n      }\n   },\n   formatVerboseDuration(millis) {\n      if (millis < factors.s) {\n         return '' + millis + 'ms';\n      } else if (millis < factors.m) {\n         return '' + parseInt(millis/factors.s) + ' seconds';\n      } else if (millis < factors.h) {\n         return '' + parseInt(millis/factors.m) + ' minutes';\n      } else if (millis < factors.d) {\n         return '' + parseInt(millis/factors.h) + ' hours';\n      } else {\n         return '' + parseInt(millis/factors.d) + ' days';\n      }\n   },\n   fromSeconds(seconds) {\n      return seconds * factors.s;\n   },\n   fromMinutes(minutes) {\n      return minutes * factors.m;\n   },\n   fromHours(hours) {\n      return hours * factors.h;\n   },\n   fromDays(days) {\n      return days * factors.d;\n   },\n   time(date) {\n      if (date) {\n         return data.getTime();\n      } else {\n         return new Date().getTime();\n      }\n   },\n   getElapsedDuration(time, currentTime) {\n      if (!currentTime) {\n         currentTime = new Date().getTime();\n      }\n      if (currentTime > time) {\n         return currentTime - time;\n      } else {\n         return 0;\n      }\n   },\n   isElapsed(time, duration, currentTime) {\n      if (!currentTime) {\n         currentTime = new Date().getTime();\n      }\n      if (duration) {\n         return currentTime - time > duration;\n      } else {\n         return currentTime > time;\n      }\n   },\n   formatElapsed(time) {\n      let currentTime = new Date().getTime();\n      if (time > currentTime) {\n         return that.formatDuration(time - currentTime);\n      } else {\n         return '0ms';\n      }\n   },\n   parse(millis, defaultValue) {\n      if (lodash.isNumber(millis)) {\n         return millis;\n      } else if (!lodash.isString(millis)) {\n         logger.warn('parse typeof: ' + typeof millis);\n         return defaultValue;\n      }\n      if (/^[0-9]+$/.test(millis)) {\n         return parseInt(millis);\n      }\n      let match = string.match(/^([0-9]+)([a-z]?)$/);\n      if (match) {\n        let factor = 1;\n        if (match.length === 3) {\n           assert(factors[match[2]], 'factor: ' + match[2]);\n           factor = factors[match[2]];\n        }\n        let value = parseInt(match[1]);\n        return value * factor;\n      }\n      return defaultValue;\n   },\n   assert(millis, message) {\n      message = message + ': ' + millis;\n      assert(millis, message);\n      let value = that.parse(millis, -1);\n      assert(value >= 0, message + ': ' + value);\n      return value;\n   }\n}\n\nmodule.exports = that;\n"]}