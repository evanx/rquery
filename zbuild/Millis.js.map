{"version":3,"sources":["../lib/Millis.js"],"names":[],"mappings":";;AAGA,IAAM,OAAS,QAAQ,MAAR,CAAe,UAAf,CAA2B,MAA3B,CAAf,CAEA,SAAS,UAAT,CAAoB,MAApB,CAA4B,OAA5B,CAAqC,CAClC,OAAO,QAAU,IAAV,CAAiB,MAAxB,CACF,CAED,IAAM,QAAU,CACb,GAAI,CADS,CAEb,EAAG,IAFU,CAGb,EAAG,KAAK,EAHK,CAIb,EAAG,KAAK,EAAL,CAAQ,EAJE,CAKb,EAAG,KAAK,EAAL,CAAQ,EAAR,CAAW,EALD,CAAhB,CAQA,IAAI,KAAO,CACR,MADQ,iBACD,MADC,CACO,C;AACZ,OAAO,KAAK,cAAL,CAAoB,MAApB,CAAP,CACF,CAHO,CAIR,eAJQ,0BAIQ,KAJR,CAIe,CACpB,OAAO,IAAI,IAAJ,CAAS,KAAT,EAAgB,WAAhB,EAAP,CACF,CANO,CAOR,cAPQ,yBAOO,MAPP,CAOe,CACpB,GAAI,OAAS,QAAQ,CAArB,CAAwB,CACrB,OAAO,GAAK,MAAL,CAAc,IAArB,CACF,CAFD,KAEO,GAAI,OAAS,QAAQ,CAArB,CAAwB,CAC5B,OAAO,GAAK,SAAS,OAAO,QAAQ,CAAxB,CAAL,CAAkC,GAAzC,CACF,CAFM,KAEA,GAAI,OAAS,QAAQ,CAArB,CAAwB,CAC5B,OAAO,GAAK,SAAS,OAAO,QAAQ,CAAxB,CAAL,CAAkC,GAAzC,CACF,CAFM,KAEA,GAAI,OAAS,QAAQ,CAArB,CAAwB,CAC5B,OAAO,GAAK,SAAS,OAAO,QAAQ,CAAxB,CAAL,CAAkC,GAAzC,CACF,CAFM,KAEA,CACJ,OAAO,GAAK,SAAS,OAAO,QAAQ,CAAxB,CAAL,CAAkC,GAAzC,CACF,CACH,CAnBO,CAoBR,qBApBQ,gCAoBc,MApBd,CAoBsB,CAC3B,GAAI,OAAS,QAAQ,CAArB,CAAwB,CACrB,OAAO,GAAK,MAAL,CAAc,IAArB,CACF,CAFD,KAEO,GAAI,OAAS,QAAQ,CAArB,CAAwB,CAC5B,OAAO,GAAK,SAAS,OAAO,QAAQ,CAAxB,CAAL,CAAkC,UAAzC,CACF,CAFM,KAEA,GAAI,OAAS,QAAQ,CAArB,CAAwB,CAC5B,OAAO,GAAK,SAAS,OAAO,QAAQ,CAAxB,CAAL,CAAkC,UAAzC,CACF,CAFM,KAEA,GAAI,OAAS,QAAQ,CAArB,CAAwB,CAC5B,OAAO,GAAK,SAAS,OAAO,QAAQ,CAAxB,CAAL,CAAkC,QAAzC,CACF,CAFM,KAEA,CACJ,OAAO,GAAK,SAAS,OAAO,QAAQ,CAAxB,CAAL,CAAkC,OAAzC,CACF,CACH,CAhCO,CAiCR,WAjCQ,sBAiCI,OAjCJ,CAiCa,CAClB,OAAO,QAAU,QAAQ,CAAzB,CACF,CAnCO,CAoCR,WApCQ,sBAoCI,OApCJ,CAoCa,CAClB,OAAO,QAAU,QAAQ,CAAzB,CACF,CAtCO,CAuCR,SAvCQ,oBAuCE,KAvCF,CAuCS,CACd,OAAO,MAAQ,QAAQ,CAAvB,CACF,CAzCO,CA0CR,QA1CQ,mBA0CC,IA1CD,CA0CO,CACZ,OAAO,KAAO,QAAQ,CAAtB,CACF,CA5CO,CA6CR,IA7CQ,eA6CH,IA7CG,CA6CG,CACR,GAAI,IAAJ,CAAU,CACP,OAAO,KAAK,OAAL,EAAP,CACF,CAFD,KAEO,CACJ,OAAO,IAAI,IAAJ,GAAW,OAAX,EAAP,CACF,CACH,CAnDO,CAoDR,kBApDQ,6BAoDW,IApDX,CAoDiB,WApDjB,CAoD8B,CACnC,GAAI,CAAC,WAAL,CAAkB,CACf,YAAc,IAAI,IAAJ,GAAW,OAAX,EAAd,CACF,CACD,GAAI,YAAc,IAAlB,CAAwB,CACrB,OAAO,YAAc,IAArB,CACF,CAFD,KAEO,CACJ,OAAO,CAAP,CACF,CACH,CA7DO,CA8DR,SA9DQ,oBA8DE,IA9DF,CA8DQ,QA9DR,CA8DkB,WA9DlB,CA8D+B,CACpC,GAAI,CAAC,WAAL,CAAkB,CACf,YAAc,IAAI,IAAJ,GAAW,OAAX,EAAd,CACF,CACD,GAAI,QAAJ,CAAc,CACX,OAAO,YAAc,IAAd,CAAqB,QAA5B,CACF,CAFD,KAEO,CACJ,OAAO,YAAc,IAArB,CACF,CACH,CAvEO,CAwER,aAxEQ,wBAwEM,IAxEN,CAwEY,CACjB,IAAI,YAAc,IAAI,IAAJ,GAAW,OAAX,EAAlB,CACA,GAAI,KAAO,WAAX,CAAwB,CACrB,OAAO,KAAK,cAAL,CAAoB,KAAO,WAA3B,CAAP,CACF,CAFD,KAEO,CACJ,OAAO,KAAP,CACF,CACH,CA/EO,CAgFR,KAhFQ,gBAgFF,MAhFE,CAgFM,YAhFN,CAgFoB,CACzB,GAAI,OAAO,QAAP,CAAgB,MAAhB,CAAJ,CAA6B,CAC1B,OAAO,MAAP,CACF,CAFD,KAEO,GAAI,CAAC,OAAO,QAAP,CAAgB,MAAhB,CAAL,CAA8B,CAClC,OAAO,IAAP,CAAY,yBAA0B,MAA1B,mCAA0B,MAA1B,EAAZ,EACA,OAAO,YAAP,CACF,CACD,GAAI,WAAW,IAAX,CAAgB,MAAhB,CAAJ,CAA6B,CAC1B,OAAO,SAAS,MAAT,CAAP,CACF,CACD,IAAI,MAAQ,OAAO,KAAP,CAAa,oBAAb,CAAZ,CACA,GAAI,MAAM,MAAN,GAAiB,CAArB,CAAwB,CACrB,OAAO,QAAQ,MAAM,CAAN,CAAR,CAAP,CAA0B,WAAa,MAAM,CAAN,CAAvC,EACA,IAAI,MAAQ,SAAS,MAAM,CAAN,CAAT,CAAZ,CACA,IAAI,OAAS,QAAQ,MAAM,CAAN,CAAR,CAAb,CACA,OAAO,MAAQ,MAAf,CACF,CACD,OAAO,YAAP,CACF,CAlGO,CAmGR,MAnGQ,iKAmGD,MAnGC,CAmGO,OAnGP,CAmGgB,CACrB,QAAU,QAAU,IAAV,CAAiB,MAA3B,CACA,OAAO,MAAP,CAAe,OAAf,EACA,IAAI,MAAQ,KAAK,KAAL,CAAW,MAAX,CAAmB,CAAC,CAApB,CAAZ,CACA,OAAO,OAAS,CAAhB,CAAmB,QAAU,IAAV,CAAiB,KAApC,EACA,OAAO,KAAP,CACF,CAzGO,EAAX,CA4GA,OAAO,OAAP,CAAiB,IAAjB","file":"Millis.js","sourcesContent":["// Copyright (c) 2015, Evan Summers (twitter.com/evanxsummers)\n// ISC license, see http://github.com/evanx/redexutil/LICENSE\n\nconst logger = Loggers.create(__filename, 'info');\n\nfunction getMessage(millis, message) {\n   return message + ': ' + millis;\n}\n\nconst factors = {\n   ms: 1,\n   s: 1000,\n   m: 1000*60,\n   h: 1000*60*60,\n   d: 1000*60*60*24\n};\n\nvar that = {\n   format(millis) { // TODO deprecate\n      return that.formatDuration(millis);\n   },\n   formatTimestamp(epoch) {\n      return new Date(epoch).toISOString();\n   },\n   formatDuration(millis) {\n      if (millis < factors.s) {\n         return '' + millis + 'ms';\n      } else if (millis < factors.m) {\n         return '' + parseInt(millis/factors.s) + 's';\n      } else if (millis < factors.h) {\n         return '' + parseInt(millis/factors.m) + 'm';\n      } else if (millis < factors.d) {\n         return '' + parseInt(millis/factors.h) + 'h';\n      } else {\n         return '' + parseInt(millis/factors.d) + 'd';\n      }\n   },\n   formatVerboseDuration(millis) {\n      if (millis < factors.s) {\n         return '' + millis + 'ms';\n      } else if (millis < factors.m) {\n         return '' + parseInt(millis/factors.s) + ' seconds';\n      } else if (millis < factors.h) {\n         return '' + parseInt(millis/factors.m) + ' minutes';\n      } else if (millis < factors.d) {\n         return '' + parseInt(millis/factors.h) + ' hours';\n      } else {\n         return '' + parseInt(millis/factors.d) + ' days';\n      }\n   },\n   fromSeconds(seconds) {\n      return seconds * factors.s;\n   },\n   fromMinutes(minutes) {\n      return minutes * factors.m;\n   },\n   fromHours(hours) {\n      return hours * factors.h;\n   },\n   fromDays(days) {\n      return days * factors.d;\n   },\n   time(date) {\n      if (date) {\n         return data.getTime();\n      } else {\n         return new Date().getTime();\n      }\n   },\n   getElapsedDuration(time, currentTime) {\n      if (!currentTime) {\n         currentTime = new Date().getTime();\n      }\n      if (currentTime > time) {\n         return currentTime - time;\n      } else {\n         return 0;\n      }\n   },\n   isElapsed(time, duration, currentTime) {\n      if (!currentTime) {\n         currentTime = new Date().getTime();\n      }\n      if (duration) {\n         return currentTime - time > duration;\n      } else {\n         return currentTime > time;\n      }\n   },\n   formatElapsed(time) {\n      let currentTime = new Date().getTime();\n      if (time > currentTime) {\n         return that.formatDuration(time - currentTime);\n      } else {\n         return '0ms';\n      }\n   },\n   parse(millis, defaultValue) {\n      if (lodash.isNumber(millis)) {\n         return millis;\n      } else if (!lodash.isString(millis)) {\n         logger.warn('parse typeof: ' + typeof millis);\n         return defaultValue;\n      }\n      if (/^[0-9]+$/.test(millis)) {\n         return parseInt(millis);\n      }\n      let match = millis.match(/^([0-9]+)([a-z]*)$/);\n      if (match.length === 3) {\n         assert(factors[match[2]], 'factor: ' + match[2]);\n         let value = parseInt(match[1]);\n         let factor = factors[match[2]];\n         return value * factor;\n      }\n      return defaultValue;\n   },\n   assert(millis, message) {\n      message = message + ': ' + millis;\n      assert(millis, message);\n      let value = that.parse(millis, -1);\n      assert(value >= 0, message + ': ' + value);\n      return value;\n   }\n}\n\nmodule.exports = that;\n"]}