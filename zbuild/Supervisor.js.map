{"version":3,"sources":["../lib/Supervisor.js"],"names":[],"mappings":"snCACqB,U,YAElB,qBAAc,kCACb,C,qIAIa,a,CACF,e,CAEG,e,gHAJZ,KAAK,MAAL,CAAY,IAAZ,CAAiB,mBAAjB,CAAsC,OAAO,IAAP,CAAY,KAAK,MAAL,CAAY,UAAxB,CAAtC,E,oCAC4B,KAAK,MAAL,CAAY,U,sEAA7B,a,mBACF,e,CAAkB,KAAK,MAAL,CAAY,UAAZ,CAAuB,aAAvB,C,KACpB,e,0BACK,e,CAAkB,KAAK,MAAL,CAAY,mBAAZ,CAAgC,aAAhC,C,CACxB,OAAO,eAAP,CAAwB,oBAAsB,aAA9C,E,wBACM,KAAK,aAAL,CAAmB,aAAnB,CAAkC,eAAlC,CAAmD,eAAnD,C,wCAEN,KAAK,MAAL,CAAY,IAAZ,CAAiB,kBAAjB,CAAqC,aAArC,E,8DAGA,KAAK,eAAL,E,iCACA,KAAK,kBAAL,E,SACN,KAAK,MAAL,CAAY,IAAZ,CAAiB,YAAjB,CAA+B,OAAO,IAAP,CAAY,KAAK,UAAjB,CAA/B,EACA,KAAK,MAAL,CAAY,IAAZ,CAAiB,QAAjB,E,mPAGiB,a,CAAe,e,CAAiB,e,MAG3C,I,CAQA,S,CAIA,c,CAcF,c,CAIA,S;AAhCJ,OAAO,OAAO,QAAP,CAAgB,aAAhB,CAAP,CAAuC,gBAAvC,EACA,KAAK,MAAL,CAAY,IAAZ,CAAiB,eAAjB,CAAkC,aAAlC,CAAiD,eAAjD,CAAkE,eAAlE,EACM,I,CAAO,aAAa,eAAb,W,CACb,KAAK,MAAL,CAAY,KAAZ,CAAkB,MAAlB,CAA0B,eAA1B,CAA2C,IAA3C,EACA,OAAO,IAAP,CAAa,SAAW,eAAxB,EACA,KAAK,MAAL,CAAY,KAAZ,CAAkB,MAAlB,CAA0B,eAA1B,CAA2C,IAA3C,CAAiD,OAAO,IAAP,CAAY,IAAZ,CAAjD,EACA,OAAO,KAAK,MAAZ,CAAoB,gBAAkB,eAAtC,EACA,gBAAkB,OAAO,MAAP,CAAc,MAAM,UAAN,CAAiB,KAAK,MAAtB,CAAd,CAA6C,eAA7C,CAAlB,CACA,gBAAkB,OAAO,MAAP,CAAc,eAAd,CAA+B,MAAM,MAAN,CAAa,KAAK,MAAlB,CAA0B,aAA1B,CAAyC,QAAQ,GAAjD,CAA/B,CAAlB,CACA,KAAK,MAAL,CAAY,KAAZ,CAAkB,QAAlB,CAA4B,aAA5B,CAA2C,KAAK,MAAhD,CAAwD,eAAxD,EACM,S,CAAY,MAAM,YAAN,CAAmB,KAAK,MAAxB,CAAgC,eAAhC,C,KACd,UAAU,M,iCACL,IAAI,eAAJ,CAAoB,WAAa,UAAU,IAAV,CAAe,GAAf,CAAjC,C,SAEH,c,CAAiB,OAAO,MAAP,CAAc,CAClC,OAAQ,eAD0B,CAElC,OAAQ,QAAQ,MAAR,CAAe,aAAf,CAA8B,gBAAgB,WAAhB,EAA+B,KAAK,MAAL,CAAY,WAAzE,CAF0B,CAGlC,WAAY,IAHsB,CAIlC,WAAY,KAAK,UAJiB,CAAd,CAKpB,KAAK,KALe,C,CAMvB,KAAK,eAAL,CAAqB,aAArB,EAAsC,cAAtC,CACA,KAAK,MAAL,CAAY,KAAZ,CAAkB,iBAAlB,CAAqC,eAArC,E,IACI,MAAM,UAAN,CAAiB,IAAjB,CAAuB,KAAvB,C,oDACuB,kBAAkB,SAAlB,CAA4B,gBAAkB,KAA9C,CAAqD,OAAO,IAAP,CAAY,cAAZ,CAArD,C,SAAxB,e,wBAEH,GAAI,KAAK,SAAT,CAAoB,CACjB,OAAO,KAAK,SAAL,CAAe,GAAtB,EAA6B,EAA7B,CACF,CACG,c,CAAiB,QAAQ,KAAO,eAAf,C,CACrB,GAAI,eAAe,OAAnB,CAA4B,CACzB,eAAiB,eAAe,OAAhC,CACF,CACG,S,QACJ,GAAI,eAAe,KAAnB,CAA0B,CACvB,UAAY,cAAZ,CACA,UAAU,MAAV,CAAmB,eAAnB,CACF,CAHD,KAGO,CACJ,UAAY,IAAI,cAAJ,EAAZ,CACA,KAAK,MAAL,CAAY,IAAZ,CAAiB,sBAAjB,CAAyC,aAAzC,CAAwD,OAAO,IAAP,CAAY,cAAZ,CAAxD,EACA,OAAO,MAAP,CAAc,SAAd,CAAyB,CAAC,KAAM,aAAP,CAAzB,CAAgD,cAAhD,EACF,CACD,UAAU,IAAV,CAAiB,aAAjB,CACA,KAAK,iBAAL,CAAuB,SAAvB,E,IACI,UAAU,I,2BACX,OAAO,OAAO,UAAP,CAAkB,UAAU,IAA5B,CAAP,CAA0C,kBAAoB,aAA9D,E,yBACM,UAAU,IAAV,CAAe,cAAf,C,SAET,GAAI,KAAK,SAAT,CAAoB,CACjB,OAAO,MAAP,CAAc,OAAO,KAAK,SAAL,CAAe,GAAtB,CAAd,CAA0C,OAAO,IAAP,CAAY,SAAZ,CAAuB,KAAK,SAAL,CAAe,IAAtC,CAA1C,EACF,CACD,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,SAA3B,EACA,KAAK,UAAL,CAAgB,aAAhB,EAAiC,SAAjC,CACA,KAAK,MAAL,CAAY,IAAZ,CAAiB,2BAAjB,CAA8C,aAA9C,CAA6D,OAAO,IAAP,CAAY,KAAK,UAAjB,CAA7D,E,2NAGe,S,CAAW,CAC1B,OAAO,UAAU,IAAjB,CAAuB,gBAAvB,EACA,OAAO,OAAO,UAAP,CAAkB,UAAU,KAA5B,CAAP,CAA2C,mBAAqB,UAAU,IAA1E,EACF,C,kIAIa,S,oHADX,KAAK,MAAL,CAAY,IAAZ,CAAiB,iBAAjB,CAAoC,KAAK,gBAAL,CAAsB,MAA1D,E,kCAC6B,KAAK,gB,8DAAvB,S,cACJ,UAAU,K,2BACX,OAAO,OAAO,UAAP,CAAkB,UAAU,KAA5B,CAAP,CAA2C,mBAAqB,UAAU,IAA1E,EACA,OAAO,OAAO,QAAP,CAAgB,UAAU,IAA1B,CAAP,CAAwC,sBAAuB,UAAU,IAAjC,CAAxC,EACA,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,CAA2B,UAAU,IAArC,E,yBACM,UAAU,KAAV,CAAgB,KAAK,eAAL,CAAqB,UAAU,IAA/B,CAAhB,C,qUAOD,S,oHADX,KAAK,MAAL,CAAY,KAAZ,CAAkB,2BAAlB,CAA+C,OAAO,IAAP,CAAY,KAAK,UAAjB,CAA/C,E,mCAC6B,KAAK,gB,GAAlC,iCAAqD,CAA1C,SAA0C,YAClD,KAAK,MAAL,CAAY,KAAZ,CAAkB,8BAAlB,CAAkD,UAAU,IAA5D,EACA,GAAI,UAAU,MAAV,CAAiB,gBAArB,CAAuC,CACpC,KAAK,wBAAL,CAA8B,SAA9B,EACF,CACD,GAAI,UAAU,MAAV,CAAiB,iBAArB,CAAwC,CACrC,KAAK,yBAAL,CAA+B,SAA/B,EACF,CACH,C,wOAGqB,S,CAAW,gBACjC,OAAO,UAAU,MAAV,CAAiB,gBAAjB,CAAoC,CAA3C,CAA8C,mCAA9C,EACA,OAAO,OAAO,UAAP,CAAkB,UAAU,gBAA5B,CAAP,CAAsD,8BAAgC,UAAU,IAAhG,EACA,KAAK,iBAAL,CAAuB,UAAU,IAAjC,EAAyC,2DAAW,gLAExC,UAAU,gBAAV,EAFwC,0FAI9C,GAAI,UAAU,MAAV,CAAiB,oBAArB,CAA2C,CACxC,MAAK,MAAL,CAAY,IAAZ,cAAsB,UAAU,IAAhC,CAAsC,UAAU,MAAhD,EACF,CAFD,KAEO,CACJ,MAAK,KAAL,cAAgB,SAAhB,EACF,CAR6C,uEAAX,GAUtC,UAAU,MAAV,CAAiB,gBAVqB,CAAzC,CAWF,C,4EAEyB,S,CAAW,iBAClC,OAAO,UAAU,MAAV,CAAiB,iBAAjB,CAAqC,CAA5C,CAA+C,oCAA/C,EACA,OAAO,OAAO,UAAP,CAAkB,UAAU,iBAA5B,CAAP,CAAuD,+BAAiC,UAAU,IAAlG,EACA,KAAK,kBAAL,CAAwB,UAAU,IAAlC,EAA0C,4DAAY,gLAE1C,UAAU,iBAAV,EAF0C,0FAIhD,GAAI,UAAU,MAAV,CAAiB,qBAArB,CAA4C,CACzC,OAAK,MAAL,CAAY,IAAZ,cAAsB,UAAU,IAAhC,CAAsC,UAAU,MAAhD,EACF,CAFD,KAEO,CACJ,OAAK,KAAL,cAAgB,SAAhB,EACF,CAR+C,wEAAZ,GAUvC,UAAU,MAAV,CAAiB,iBAVsB,CAA1C,CAWF,C,2LAIa,S,oHADX,KAAK,MAAL,CAAY,IAAZ,CAAiB,kBAAjB,CAAqC,OAAO,IAAP,CAAY,KAAK,UAAjB,CAArC,E,2GACwB,KAAK,U,gHAAlB,S,sCACF,UAAU,KAAV,E,+eAET,KAAK,MAAL,CAAY,IAAZ,CAAiB,SAAjB,E,0QAGS,G,CAAK,S,wHACT,KAAK,K,2BACP,KAAK,MAAL,CAAY,KAAZ,CAAkB,GAAlB,CAAuB,UAAU,IAAjC,EACA,GAAI,IAAI,KAAR,CAAe,CACZ,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAI,KAAtB,EACF,C,IACG,KAAK,UAAL,CAAgB,O,+BACb,KAAK,UAAL,CAAgB,OAAhB,GAA4B,S,mDACvB,KAAK,UAAL,CAAgB,OAAhB,CAAwB,KAAxB,CAA8B,OAA9B,CAAuC,UAAU,IAAjD,C,QAGZ,KAAK,GAAL,G,gCAEA,KAAK,MAAL,CAAY,IAAZ,CAAiB,UAAU,IAA3B,CAAiC,GAAjC,E,oVAOW,S,wHAFV,KAAK,gBAAL,CAAsB,M,2BACvB,KAAK,gBAAL,CAAsB,OAAtB,G,+GACwB,KAAK,gB,mHAAlB,S,wDAEC,UAAU,GAAV,E,SACN,KAAK,MAAL,CAAY,IAAZ,CAAiB,eAAjB,CAAkC,UAAU,IAA5C,E,qFAEA,KAAK,MAAL,CAAY,KAAZ,CAAkB,eAAlB,CAAmC,UAAU,IAA7C,CAAmD,aAAI,KAAvD,E,g6BAOH,KAAK,aAAL,E,YACF,KAAK,W,oDACA,KAAK,WAAL,CAAiB,SAAjB,E,QAET,QAAQ,IAAR,CAAa,CAAb,E,4KAzLe,U","file":"Supervisor.js","sourcesContent":["\nexport default class Supervisor {\n\n   constructor() {\n   }\n\n   async init() {\n      this.logger.info('config.components', Object.keys(this.config.components));\n      for (const componentName in this.config.components) {\n         const componentConfig = this.config.components[componentName];\n         if (componentConfig) {\n            const componentModule = this.config.availableComponents[componentName];\n            assert(componentModule, 'componentModule: ' + componentName);\n            await this.initComponent(componentName, componentModule, componentConfig);\n         } else {\n            this.logger.warn('config.component', componentName);\n         }\n      }\n      await this.startComponents();\n      await this.scheduleComponents();\n      this.logger.info('components', Object.keys(this.components));\n      this.logger.info('inited');\n   }\n\n   async initComponent(componentName, componentModule, componentConfig) { // TODO support external modules\n      assert(lodash.isString(componentName), 'component name');\n      this.logger.info('initComponent', componentName, componentModule, componentConfig);\n      const meta = require(`./${componentModule}.config`);\n      this.logger.debug('meta', componentModule, meta);\n      assert(meta, 'meta: ' + componentModule);\n      this.logger.debug('meta', componentModule, meta, Object.keys(meta));\n      assert(meta.config, 'meta.config: ' + componentModule);\n      componentConfig = Object.assign(Metas.getDefault(meta.config), componentConfig);\n      componentConfig = Object.assign(componentConfig, Metas.getEnv(meta.config, componentName, process.env));\n      this.logger.debug('config', componentName, meta.config, componentConfig);\n      const errorKeys = Metas.getErrorKeys(meta.config, componentConfig);\n      if (errorKeys.length) {\n         throw new ValidationError('config: ' + errorKeys.join(' '));\n      }\n      const componentState = Object.assign({\n         config: componentConfig,\n         logger: Loggers.create(componentName, componentConfig.loggerLevel || this.config.loggerLevel),\n         supervisor: this,\n         components: this.components\n      }, meta.state);\n      this.componentStates[componentName] = componentState;\n      this.logger.debug('componentModule', componentModule);\n      if (Metas.isSpecType(meta, 'icp')) {\n         componentModule = await ClassPreprocessor.buildSync(componentModule + '.js', Object.keys(componentState));\n      }\n      if (meta.singleton) {\n         global[meta.singleton.key] = {};\n      }\n      let componentClass = require('./' + componentModule);\n      if (componentClass.default) {\n         componentClass = componentClass.default;\n      }\n      let component;\n      if (componentClass.start) {\n         component = componentClass;\n         component.config = componentConfig;\n      } else {\n         component = new componentClass();\n         this.logger.info('initComponents state', componentName, Object.keys(componentState));\n         Object.assign(component, {name: componentName}, componentState);\n      }\n      component.name = componentName;\n      this.validateComponent(component);\n      if (component.init) {\n         assert(lodash.isFunction(component.init), 'init function: ' + componentName);\n         await component.init(componentState);\n      }\n      if (meta.singleton) {\n         Object.assign(global[meta.singleton.key], lodash.pick(component, meta.singleton.pick));\n      }\n      this.initedComponents.push(component);\n      this.components[componentName] = component;\n      this.logger.info('initComponents components', componentName, Object.keys(this.components));\n   }\n\n   validateComponent(component) {\n      assert(component.name, 'component.name');\n      assert(lodash.isFunction(component.start), 'start function: ' + component.name);\n   }\n\n   async startComponents() {\n      this.logger.info('startComponents', this.initedComponents.length);\n      for (const component of [... this.initedComponents]) {\n         if (component.start) {\n            assert(lodash.isFunction(component.start), 'start function: ' + component.name);\n            assert(lodash.isString(component.name), 'name type: ' + typeof component.name);\n            this.logger.debug('start', component.name);\n            await component.start(this.componentStates[component.name]);\n         }\n      }\n   }\n\n   async scheduleComponents() {\n      this.logger.debug('scheduleComponents length', Object.keys(this.components));\n      for (const component of [... this.initedComponents]) {\n         this.logger.debug('scheduleComponents component', component.name);\n         if (component.config.scheduledTimeout) {\n            this.scheduleComponentTimeout(component);\n         }\n         if (component.config.scheduledInterval) {\n            this.scheduleComponentInterval(component);\n         }\n      }\n   }\n\n   scheduleComponentTimeout(component) {\n      assert(component.config.scheduledTimeout > 0, 'component.config.scheduledTimeout');\n      assert(lodash.isFunction(component.scheduledTimeout), 'scheduledTimeout function: ' + component.name);\n      this.scheduledTimeouts[component.name] = setTimeout(async () => {\n         try {\n            await component.scheduledTimeout();\n         } catch (err) {\n            if (component.config.scheduledTimeoutWarn) {\n               this.logger.warn(err, component.name, component.config);\n            } else {\n               this.error(err, component);\n            }\n         }\n      }, component.config.scheduledTimeout);\n   }\n\n   scheduleComponentInterval(component) {\n      assert(component.config.scheduledInterval > 0, 'component.config.scheduledInterval');\n      assert(lodash.isFunction(component.scheduledInterval), 'scheduledInterval function: ' + component.name);\n      this.scheduledIntervals[component.name] = setInterval(async () => {\n         try {\n            await component.scheduledInterval();\n         } catch (err) {\n            if (component.config.scheduledIntervalWarn) {\n               this.logger.warn(err, component.name, component.config);\n            } else {\n               this.error(err, component);\n            }\n         }\n      }, component.config.scheduledInterval);\n   }\n\n   async start() {\n      this.logger.info('start components', Object.keys(this.components));\n      for (const component of this.components) {\n         await component.start();\n      }\n      this.logger.info('started');\n   }\n\n   async error(err, component) {\n      if (!this.ended) {\n         this.logger.error(err, component.name);\n         if (err.stack) {\n            this.logger.error(err.stack);\n         }\n         if (this.components.metrics) {\n            if (this.components.metrics !== component) {\n               await this.components.metrics.count('error', component.name);\n            }\n         }\n         this.end();\n      } else {\n         this.logger.warn(component.name, err);\n      }\n   }\n\n   async endComponents() {\n      if (this.initedComponents.length) {\n         this.initedComponents.reverse();\n         for (const component of this.initedComponents) {\n            try {\n               await component.end();\n               this.logger.info('end component', component.name);\n            } catch (err) {\n               this.logger.error('end component', component.name, err.stack);\n            }\n         }\n      }\n   }\n\n   async end() {\n      await this.endComponents();\n      if (this.redisClient) {\n         await this.redisClient.quitAsync();\n      }\n      process.exit(0);\n   }\n}\n"]}