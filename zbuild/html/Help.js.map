{"version":3,"sources":["../../rquery/html/Help.js"],"names":[],"mappings":"kpBAKe,SAAU,KAAV,CAAiB,CAC7B,OAAO,KAAP,CAAa,OAAb,CAAsB,OAAO,IAAP,CAAY,KAAZ,CAAtB,EACA,OAAO,OAAO,MAAP,CAAc,KAAd,CAAqB,CACzB,SAAU,yDADe,CAEzB,MAAO,MAAM,MAAN,CAAa,YAFK,CAGzB,yCAEE,WAAW,MAAM,MAAN,CAAa,MAAxB,EAAgC,IAAhC,CAAqC,IAArC,CAFF,sCAIE,YAAY,MAAM,MAAN,CAAa,SAAzB,EAAoC,IAApC,CAAyC,IAAzC,CAJF,0CAME,YAAY,MAAM,MAAN,CAAa,IAAzB,EAA+B,IAA/B,CAAoC,IAApC,CANF,qCAQE,YAAY,MAAM,MAAN,CAAa,QAAzB,EAAmC,IAAnC,CAAwC,IAAxC,CARF,YASE,cAAc,MAAM,MAAN,CAAa,OAA3B,CATF,6CAWE,YAAY,MAAM,MAAN,CAAa,eAAzB,EAA0C,IAA1C,CAA+C,IAA/C,CAXF,WAHyB,CAArB,CAAP,CAiBF,C,CAvBD,gC,gIAEA,IAAM,OAAS,QAAQ,MAAR,CAAe,OAAO,QAAtB,CAAf,CAuBA,SAAS,aAAT,CAAuB,OAAvB,CAAgC,CAC7B,GAAI,CAAC,QAAQ,MAAb,CAAqB,CAClB,OAAO,EAAP,CACF,CAFD,KAEO,CACJ,kCACE,YAAY,OAAZ,EAAqB,IAArB,CAA0B,IAA1B,CADF,YAGF,CACH,CAED,SAAS,UAAT,CAAoB,IAApB,CAA0B,CACvB,OAAO,KAAK,GAAL,CAAS,SAAC,GAAD,CAAM,KAAN,CAAgB,UACJ,IAAI,KAAJ,CAAU,4BAAV,GAA2C,EADvC,sCACtB,QADsB,cACZ,IADY,UAE7B,OAAO,KAAP,CAAa,YAAb,CAA2B,GAA3B,CAAgC,QAAhC,EACA,GAAI,QAAJ,CAAc,CACX,iCACc,iBAAO,IAAP,CAAY,aAD1B,yBAEU,GAFV,KAEiB,IAFjB,oCAKF,CAND,KAMO,CACJ,iCACc,iBAAO,IAAP,CAAY,aAD1B,yBAEU,GAFV,KAEiB,GAFjB,oCAKF,CACH,CAhBM,CAAP,CAiBF,CAED,SAAS,WAAT,CAAqB,KAArB,CAA4B,CACzB,OAAO,MAAM,GAAN,CAAU,SAAC,IAAD,CAAO,KAAP,CAAiB,CAC/B,IAAM,UAAY,KAAK,KAAL,CAAW,GAAX,CAAlB,CACA,GAAI,UAAU,CAAV,IAAiB,IAArB,CAA2B,CACxB,IAAM,OAAS,UAAU,KAAV,CAAgB,CAAhB,CAAmB,CAAnB,EAAsB,IAAtB,CAA2B,GAA3B,CAAf,CACA,GAAI,UAAU,MAAV,CAAmB,CAAvB,CAA0B,CACxB,IAAM,WAAa,UAAU,CAAV,CAAnB,CACA,GAAI,UAAU,MAAV,CAAmB,CAAvB,CAA0B,CACvB,IAAM,OAAS,UAAU,KAAV,CAAgB,CAAhB,EAAmB,GAAnB,CAAuB,uBAAS,MAAM,OAAN,CAAc,KAAd,CAAqB,GAArB,CAAT,EAAvB,CAAf,CACA,OAAO,GAAG,GAAH,CAAO,iBAAO,MAAP,CAAc,IAArB,CAA2B,CAAC,GAAG,CAAH,CAAK,UAAL,CAAD,CAAmB,GAAG,EAAH,CAAM,MAAN,CAAnB,CAA3B,CAAP,CACF,CACD,OAAO,GAAG,GAAH,CAAO,iBAAO,MAAP,CAAc,IAArB,CAA2B,CAAC,GAAG,CAAH,CAAK,UAAL,CAAD,CAA3B,CAAP,CACF,CACF,CACD,OAAO,GAAG,IAAH,CAAQ,iBAAO,MAAP,CAAc,IAAtB,CAA4B,IAA5B,CAAP,CACF,CAdM,CAAP,CAeF","file":"Help.js","sourcesContent":["\nimport styles from './styles';\n\nconst logger = Loggers.create(module.filename);\n\nexport default function (props) {\n   logger.debug('props', Object.keys(props));\n   return Object.assign(props, {\n      backPath: 'https://github.com/evanx/redishub/blob/master/README.md',\n      title: props.config.serviceLabel,\n      content: `\n      <h3>Basic</h3>\n      ${renderUrls(props.result.common).join('\\n')}\n      <h3>Ephemeral</h3>\n      ${renderPaths(props.result.ephemeral).join('\\n')}\n      <h3>Miscellaneous</h3>\n      ${renderPaths(props.result.misc).join('\\n')}\n      <h3>Telegram</h3>\n      ${renderPaths(props.result.telegram).join('\\n')}\n      ${renderAccount(props.result.account)}\n      <h3>Account keyspace</h3>\n      ${renderPaths(props.result.accountKeyspace).join('\\n')}\n      `\n   });\n}\n\nfunction renderAccount(account) {\n   if (!account.length) {\n      return '';\n   } else {\n      return `<h3>Account</h3>\n      ${renderPaths(account).join('\\n')}\n      `;\n   }\n}\n\nfunction renderUrls(urls) {\n   return urls.map((url, index) => {\n      const [matching, path] = url.match(/^https?:\\/\\/[^\\/]+(\\/\\S+)$/) || [];\n      logger.debug('renderUrls', url, matching);\n      if (matching) {\n         return `\n         <div style=\"${styles.help.linkContainer}\">\n         <a href=${url}>${path}</a>\n         </div>\n         `;\n      } else {\n         return `\n         <div style=\"${styles.help.linkContainer}\">\n         <a href=${url}>${url}</a>\n         </div>\n         `;\n      }\n   });\n}\n\nfunction renderPaths(paths) {\n   return paths.map((path, index) => {\n      const pathPaths = path.split('/');\n      if (pathPaths[1] === 'ak') {\n         const akPath = pathPaths.slice(0, 3).join('/');\n         if (pathPaths.length > 4) {\n           const commandKey = pathPaths[4];\n           if (pathPaths.length > 6) {\n              const params = pathPaths.slice(6).map(param => param.replace(/^:/g, ' '));\n              return Hs.div(styles.routes.path, [Hc.b(commandKey), Hc.tt(params)]);\n           }\n           return Hs.div(styles.routes.path, [Hc.b(commandKey)]);\n        }\n      }\n      return Hs.span(styles.routes.path, path);\n   })\n}\n"]}