{"version":3,"sources":["../lib/HtmlElements.js"],"names":[],"mappings":";;;;;;;;QAGgB,a,GAAA,a;QAWA,E,GAAA,E;QAkBA,G,GAAA,G;QAIA,M,GAAA,M;;AAnChB,IAAM,SAAS,QAAQ,MAAR,CAAe,UAAf,EAA2B,MAA3B,CAAf;;AAEO,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AACpC,OAAI,OAAO,OAAP,CAAe,OAAf,CAAJ,EAA6B;AAC1B,gBAAU,QAAQ,IAAR,CAAa,IAAb,CAAV;AACF,IAFD,MAEO,IAAI,OAAO,QAAP,CAAgB,OAAhB,CAAJ,EAA8B,CACpC,CADM,MACA,IAAI,OAAO,SAAP,CAAiB,OAAjB,CAAJ,EAA+B,CACrC,CADM,MACA;AACJ,aAAO,IAAP,CAAY,cAAZ,SAAmC,OAAnC,yCAAmC,OAAnC;AACF;AACD,UAAO,QAAQ,QAAR,GAAmB,OAAnB,CAA2B,QAA3B,EAAqC,IAArC,CAAP;AACF;;AAEM,SAAS,EAAT,CAAY,IAAZ,EAAkB,UAAlB,EAA2C;AAC/C,OAAM,UAAU,EAAhB;AACA,OAAM,QAAQ,QAAQ,UAAR,CAAmB,UAAnB,EACb,MADa,CACN;AAAA,aAAK,EAAE,KAAF,IAAW,EAAE,KAAF,CAAQ,QAAR,EAAhB;AAAA,IADM,EAEb,GAFa,CAET;AAAA,aAAK,OAAO,MAAP,CAAc,CAAd,EAAiB,EAAC,OAAO,EAAE,KAAF,CAAQ,QAAR,EAAR,EAAjB,CAAL;AAAA,IAFS,EAGb,GAHa,CAGT;AAAA,aAAQ,EAAE,GAAV,UAAkB,EAAE,KAApB;AAAA,IAHS,CAAd;AAIA,UAAO,KAAP,CAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB;AACA,OAAI,MAAM,MAAV,EAAkB;AACf,cAAQ,IAAR,OAAiB,IAAjB,SAAyB,MAAM,IAAN,CAAW,GAAX,CAAzB;AACF,IAFD,MAEO;AACJ,cAAQ,IAAR,OAAiB,IAAjB;AACF;;AAX8C,qCAAV,QAAU;AAAV,cAAU;AAAA;;AAY/C,WAAQ,IAAR,CAAa,SAAS,GAAT,CAAa;AAAA,aAAS,MAAM,QAAN,EAAT;AAAA,IAAb,CAAb;AACA,WAAQ,IAAR,QAAkB,IAAlB;AACA,UAAO,KAAP,CAAa,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,EAAgC,OAAhC;AACA,UAAO,OAAO,OAAP,CAAe,OAAf,EAAwB,IAAxB,CAA6B,IAA7B,CAAP;AACF;;AAEM,SAAS,GAAT,CAAa,IAAb,EAAgC;AAAA,sCAAV,QAAU;AAAV,cAAU;AAAA;;AACpC,UAAO,qBAAG,KAAH,EAAU,IAAV,SAAmB,QAAnB,EAAP;AACF;;AAEM,SAAS,MAAT,CAAgB,IAAhB,EAAsB,KAAtB,EAA0C;AAAA,sCAAV,QAAU;AAAV,cAAU;AAAA;;AAC9C,UAAO,qBAAG,IAAH,EAAS,EAAC,YAAD,EAAT,SAAqB,QAArB,EAAP;AACF","file":"HtmlElements.js","sourcesContent":["\nconst logger = Loggers.create(__filename, 'info');\n\nexport function renderContent(content) {\n   if (lodash.isArray(content)) {\n      content = content.join('\\n');\n   } else if (lodash.isString(content)) {\n   } else if (lodash.isInteger(content)) {\n   } else {\n      logger.warn('content type', typeof content);\n   }\n   return content.toString().replace(/\\n\\s*/g, '\\n');\n}\n\nexport function el(name, attributes, ...children) {\n   const content = [];\n   const attrs = Objects.mapEntries(attributes)\n   .filter(e => e.value && e.value.toString())\n   .map(e => Object.assign(e, {value: e.value.toString()}))\n   .map(e => `${e.key}=\"${e.value}\"`);\n   logger.debug('el', name, attrs);\n   if (attrs.length) {\n      content.push(`<${name} ${attrs.join(' ')}>`);\n   } else {\n      content.push(`<${name}>`);\n   }\n   content.push(children.map(child => child.toString()));\n   content.push(`</${name}>`);\n   logger.debug('el', name, attrs, content);\n   return lodash.flatten(content).join('\\n');\n}\n\nexport function div(attr, ...children) {\n   return el('div', attr, ...children);\n}\n\nexport function styled(name, style, ...children) {\n   return el(name, {style}, ...children);\n}\n"]}