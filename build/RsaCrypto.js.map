{"version":3,"sources":["../rquery/RsaCrypto.js"],"names":[],"mappings":";;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;;AAEA,IAAI,gCAAgC,SAAhC,6BAAgC,CAAS,SAAT,EAAoB,iCAApB,EAAuD;AACvF,QAAI,eAAe,KAAK,OAAL,CAAa,iCAAb,CAAnB;AACA,QAAI,YAAY,GAAG,YAAH,CAAgB,YAAhB,EAA8B,MAA9B,CAAhB;AACA,QAAI,SAAS,IAAI,MAAJ,CAAW,SAAX,CAAb;AACA,QAAI,YAAY,OAAO,aAAP,CAAqB,SAArB,EAAgC,MAAhC,CAAhB;AACA,WAAO,UAAU,QAAV,CAAmB,QAAnB,CAAP;AACH,CAND;;AAQA,IAAI,iCAAiC,SAAjC,8BAAiC,CAAS,SAAT,EAAoB,kCAApB,EAAwD;AACzF,QAAI,eAAe,KAAK,OAAL,CAAa,kCAAb,CAAnB;AACA,QAAI,aAAa,GAAG,YAAH,CAAgB,YAAhB,EAA8B,MAA9B,CAAjB;AACA,QAAI,SAAS,IAAI,MAAJ,CAAW,SAAX,EAAsB,QAAtB,CAAb;AACA,QAAI,YAAY,OAAO,cAAP,CAAsB,UAAtB,EAAkC,MAAlC,CAAhB;AACA,WAAO,UAAU,QAAV,CAAmB,MAAnB,CAAP;AACH,CAND;;AAQA,OAAO,OAAP,GAAiB;AACb,mCAA+B,6BADlB;AAEb,oCAAgC;AAFnB,CAAjB;;AAKA,SAAS,IAAT,GAAgB;AACb,QAAI,YAAY,OAAhB;AACA,QAAI,YAAY,8BAA8B,OAA9B,EAAuC,gCAAvC,CAAhB;AACA,YAAQ,GAAR,CAAY,WAAZ,EAAyB,SAAzB;AACA,QAAI,YAAY,+BAA+B,SAA/B,EAA0C,mCAA1C,CAAhB;AACA,YAAQ,GAAR,CAAY,WAAZ,EAAyB,SAAzB;AACF;;AAED","file":"RsaCrypto.js","sourcesContent":["\nvar crypto = require(\"crypto\");\nvar path = require(\"path\");\nvar fs = require(\"fs\");\n\nvar encryptStringWithRsaPublicKey = function(toEncrypt, relativeOrAbsolutePathToPublicKey) {\n    var absolutePath = path.resolve(relativeOrAbsolutePathToPublicKey);\n    var publicKey = fs.readFileSync(absolutePath, \"utf8\");\n    var buffer = new Buffer(toEncrypt);\n    var encrypted = crypto.publicEncrypt(publicKey, buffer);\n    return encrypted.toString(\"base64\");\n};\n\nvar decryptStringWithRsaPrivateKey = function(toDecrypt, relativeOrAbsolutePathtoPrivateKey) {\n    var absolutePath = path.resolve(relativeOrAbsolutePathtoPrivateKey);\n    var privateKey = fs.readFileSync(absolutePath, \"utf8\");\n    var buffer = new Buffer(toDecrypt, \"base64\");\n    var decrypted = crypto.privateDecrypt(privateKey, buffer);\n    return decrypted.toString(\"utf8\");\n};\n\nmodule.exports = {\n    encryptStringWithRsaPublicKey: encryptStringWithRsaPublicKey,\n    decryptStringWithRsaPrivateKey: decryptStringWithRsaPrivateKey\n}\n\nfunction test() {\n   var cleartext = 'hello';\n   var encrypted = encryptStringWithRsaPublicKey('hello', '/home/evans/.redishub/cert.pem');\n   console.log('encrypted', encrypted);\n   var decrypted = decryptStringWithRsaPrivateKey(encrypted, '/home/evans/.redishub/privkey.pem');\n   console.log('decrypted', decrypted);\n}\n\ntest();\n"]}