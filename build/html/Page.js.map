{"version":3,"sources":["../../rquery/html/Page.js"],"names":[],"mappings":";;;;;;;;;;;;AACA,IAAM,SAAS,QAAQ,MAAR,CAAe,OAAO,QAAtB,CAAf;;AAEA,IAAM,uBAAuB,CAC1B,oBAD0B,EAE1B,mBAF0B,EAG1B,mBAH0B,EAI1B,mBAJ0B,EAK1B,kBAL0B,CAA7B;;;;;;;;;6BAUU,K,EAAO;AACX,cAAK,KAAL,GAAa,KAAb;AACA,gBAAO,KAAP,CAAa,OAAb,EAAsB,OAAO,IAAP,CAAY,KAAZ,CAAtB;AACA,gBAAO,MAAM,MAAN,CAAa,SAApB,EAA+B,WAA/B;AACA,aAAI,UAAU,EAAd;AACA,aAAI,OAAO,OAAP,CAAe,MAAM,OAArB,CAAJ,EAAmC;AAChC,sBAAU,MAAM,OAAN,CAAc,IAAd,CAAmB,IAAnB,CAAV;AACF,UAFD,MAEO,IAAI,OAAO,QAAP,CAAgB,MAAM,OAAtB,CAAJ,EAAoC;AACxC,sBAAU,MAAM,OAAhB;AACF,UAFM,MAEA;AACJ,mBAAO,KAAP,CAAa,oBAAb,UAA0C,MAAM,OAAhD;AACA,sBAAU,MAAM,OAAN,CAAc,QAAd,EAAV;AACF;AACD,mBAAU,QAAQ,OAAR,CAAgB,QAAhB,EAA0B,IAA1B,CAAV;AACA,cAAK,IAAL,GAAY,MAAM,IAAN,IAAc,EAA1B;AACA,aAAI,aAAa,EAAjB;AACA,aAAI,KAAK,IAAL,CAAU,QAAd,EAAwB;AACrB,2DAA4C,KAAK,IAAL,CAAU,QAAtD;AACF;AACD,gEAGS,MAAM,KAHf,oPAagC,qBAAqB,IAArB,CAA0B,IAA1B,CAbhC,wDAewB,KAAK,WAAL,CAAiB,KAAjB,CAfxB,gGAiB+B,MAAM,MAAN,CAAa,SAjB5C,iFAmBoB,UAnBpB,+CAoBE,OApBF;AAyBF;;;wCAEkB;AAAA,aAAN,GAAM,QAAN,GAAM;;AAChB,aAAI,GAAJ,EAAS;AACN,gBAAM,KAAK,IAAI,GAAJ,CAAQ,YAAR,CAAX;AACA,gBAAI,GAAG,KAAH,CAAS,QAAT,CAAJ,EAAwB,CACvB,CADD,MACO;AACJ,sBAAO,sBAAP;AACF;AACH;AACD,gBAAO,MAAP;AACF","file":"Page.js","sourcesContent":["\nconst logger = Loggers.create(module.filename);\n\nconst viewportContentArray = [\n   'width=device-width',\n   'maximum-scale=1.0',\n   'minimum-scale=1.0',\n   'initial-scale=1.0',\n   'user-scalable=no'\n];\n\nexport default class {\n\n   render(props) {\n      this.props = props;\n      logger.debug('props', Object.keys(props));\n      assert(props.config.assetsUrl, 'assetsUrl');\n      let content = '';\n      if (lodash.isArray(props.content)) {\n         content = props.content.join('\\n');\n      } else if (lodash.isString(props.content)) {\n         content = props.content;\n      } else {\n         logger.error('props.content type', typeof props.content);\n         content = props.content.toString();\n      }\n      content = content.replace(/\\n\\s*/g, '\\n');\n      this.reqx = props.reqx || {};\n      let helpScript = '';\n      if (this.reqx.helpPath) {\n         helpScript = `window.location.pathname = '${this.reqx.helpPath}'`;\n      }\n      return `\n      <html>\n      <head>\n      <title>${props.title}</title>\n      <style>\n         a {\n            text-decoration: none;\n         }\n         pre {\n            background-color: #f8f8f8;\n            padding: 5px;\n         }\n      </style>\n      <meta name='viewport' content=${viewportContentArray.join(', ')}/>\n      </head>\n      <body style='padding: ${this.bodyPadding(props)}; max-width: 768px'>\n      <header style=''>\n      <img style='opacity:.5' src='${props.config.assetsUrl}/icomoon/png20-38/home.png'/>\n      </header>\n      <article onClick=\"${helpScript}\"  style='padding-top: 10px'>\n      ${content}\n      </article>\n      </body>\n      </html>\n      `;\n   }\n\n   bodyPadding({req}) {\n      if (req) {\n         const ua = req.get('user-agent');\n         if (ua.match(/Mobile/)) {\n         } else {\n            return '10px 10px 10px 100px';\n         }\n      }\n      return '10px';\n   }\n}\n"]}